pr: none
trigger: none

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: env
    displayName: Environment to Run Test
    type: string
    values:
      - dev
      - sit

variables:
  artifactName: TestSuite
  artifactDownloadedPath: /agent/_work/1
  destinationFolderExtractArtifact: /nodo/extracted


  

stages:
  - stage: python_env
    displayName: "Fetch Test Suite (${{ parameters.env }})"
    jobs:
      - job: 
        displayName: "python_env (${{ parameters.env }})"
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
            
            
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.x'
            inputs:
              versionSpec: '3.10'

          - script: |
              
              sudo apt-get install build-essential unzip
              mkdir /home/vsts/work/1/s/oracle
              cd /home/vsts/work/1/s/oracle
              sudo wget https://download.oracle.com/otn_software/linux/instantclient/216000/instantclient-basic-linux.x64-21.6.0.0.0dbru.zip
              sudo unzip instantclient-basic-linux.x64-21.6.0.0.0dbru.zip
              sudo apt update
              sudo apt install libaio1
              #sudo sh -c "echo /agent/_work/1/a/extracted/oracle/instantclient_21_6 > /etc/ld.so.conf.d/oracle-instantclient.conf"
              #sudo ldconfig
            displayName: 'Install Oracle Instant Client'


          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: /home/vsts/work/1/s/
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/nodo-dei-pagamenti-NRT.zip
              replaceExistingArchive: true

            
          - publish: $(Build.ArtifactStagingDirectory)/nodo-dei-pagamenti-NRT.zip
            displayName: "Publish Artifact"
            artifact: $(artifactName)
            
            
  - stage: test_execute
    displayName: "Execute Test Suite (${{ parameters.env }})"
    dependsOn:
      - python_env
    variables:
      - group: nodo-${{ parameters.env }}
    condition: succeeded()
    jobs:
      - job: test_execute
        displayName: "execute test suite (${{ parameters.env }})"
        pool: $(deploy-pool-${{ parameters.env }})
        steps:
          - checkout: none          
          - script: |
              sudo rm -rf $(artifactDownloadedPath)
              sudo mkdir $(artifactDownloadedPath)
              
            displayName: 'Create Folder to Download Pipeline Artifact'
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: $(artifactName)
              path: $(artifactDownloadedPath)
              source: current
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: $(artifactDownloadedPath)/nodo-dei-pagamenti-NRT.zip
              destinationFolder: $(artifactDownloadedPath)/$(destinationFolderExtractArtifact)
              cleanDestinationFolder: true
              overwriteExistingFiles: false
          - script: |
              echo $(artifactDownloadedPath)/$(destinationFolderExtractArtifact)/oracle/instantclient_21_6
              sudo sh -c "echo $(artifactDownloadedPath)/$(destinationFolderExtractArtifact)/oracle/instantclient_21_6 > /etc/ld.so.conf.d/oracle-instantclient.conf"
              sudo ldconfig
            displayName: 'Linux ldconfig Command for Oracle Instant Client'
          - script: |
             whereis python3
             whereis pip3
             whereis pip
             echo $PATH
             
             export PATH=/usr/bin:/usr/local/bin:$PATH #Add environment variables
             echo $PATH

             which python3
             which pip3
             which pip
             
             sudo pip3 install behave 
             sudo pip3 install -U -r $(artifactDownloadedPath)/$(destinationFolderExtractArtifact)/requirements.txt #Install Requirements
             whereis behave
             which behave

             behave --help #Run behave
             #behave --junit-directory=$(artifactDownloadedPath)/$(destinationFolderExtractArtifact)/report --junit $(artifactDownloadedPath)/extracted/src/integ-test/bdd-test/features/NewMod3/flows/TestGenerazioneRicevute03/generazioneRicevute_flows_ko_PAnew.feature
            displayName: 'Install Python requirements'
          #- task: PublishTestResults@2
            #condition: succeededOrFailed()
            #inputs:
              #testResultsFiles: '$(artifactDownloadedPath)/$(destinationFolderExtractArtifact)/report/*.xml'
              #mergeTestResults: true
              #testRunTitle: Integration test Nodo $(Build.BuildNumber)
              #failTaskOnFailedTests: true
          - script: |
             sudo rm -rf $(artifactDownloadedPath)
             
            displayName: 'Agent Pool CleanUP'