pr: none
trigger: none

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: env
    displayName: Environment to Run Test
    type: string
    values:
      - dev
      - sit

variables:

  nodopath: /home/vsts/work/1/s/pagopa-nodo-dei-pagamenti-test
  artifactName: TestSuite
  downloadArtifactRelativePath: /agent/_work/1/
  

stages:
  - stage: python_env
    displayName: "Fetch Test Suite (${{ parameters.env }})"
    jobs:
      - job: 
        displayName: "python_env"
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
            
            
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.x'
            inputs:
              versionSpec: '3.10'
            
          - script: |
              sudo apt install python3-venv
              cd $(nodopath)
              python3 -m venv env
              source ./env/bin/activate
            displayName: 'Create Virtual Environment  (${{ parameters.env }})'
            
          - script: |
              sudo apt-get install build-essential unzip
              cd ./env
              sudo mkdir oracle
              cd oracle
              sudo wget https://download.oracle.com/otn_software/linux/instantclient/216000/instantclient-basic-linux.x64-21.6.0.0.0dbru.zip
              sudo unzip instantclient-basic-linux.x64-21.6.0.0.0dbru.zip
              sudo apt update
              sudo apt install libaio1
            displayName: 'Install Oracle Instant Client (${{ parameters.env }})'
            
          - script: |
             pwd
             ls -la
             python3 -m pip install -r requirements.txt

             echo "Find requirements in lib"
             ls -la /home/vsts/work/1/s/env/lib/

             echo "Find requirements in lib64"
             ls -la /home/vsts/work/1/s/env/lib64/
             
             echo "pip list"
             pip list

            displayName: 'Install requirements (${{ parameters.env }})'

          - task: ArchiveFiles@2
            displayName: 'Archive files (${{ parameters.env }})'
            inputs:
              rootFolderOrFile: /home/vsts/work/1/s/
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/nodo-dei-pagamenti.zip
              replaceExistingArchive: true

            
          - publish: $(Build.ArtifactStagingDirectory)/nodo-dei-pagamenti.zip
            displayName: "Publish Virtual Enviroment (${{ parameters.env }})"
            artifact: $(artifactName)
            
            
  - stage: test_execute
    displayName: "Execute Test Suite (${{ parameters.env }})"
    dependsOn:
      - python_env
    variables:
      - group: nodo-${{ parameters.env }}
    condition: succeeded()
    jobs:
      - job: test_execute
        displayName: "execute test suite (${{ parameters.env }})"
        pool: $(deploy-pool-${{ parameters.env }})
        steps:
          - checkout: none
          
          - download: current
            artifact: $(artifactName)
            displayName: "Download Test Suite"
            
          - script: |
             pwd
             whoami
             echo "ls -la /agent/_work/1/TestSuite"
             ls -la /agent/_work/1/TestSuite
             echo "ls -la /agent/_work/1/s"
             ls -la /agent/_work/1/s 
            
            displayName: 'Retrieve Artifact Published'
            
          
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: /agent/_work/1/TestSuite/nodo-dei-pagamenti.zip
              destinationFolder: '$(System.ArtifactsDirectory)/extracted'
              cleanDestinationFolder: true
              overwriteExistingFiles: false
              
          - script: |
             pwd
             echo "==== Files Extracted: ==== "
             ls -la /agent/_work/1/a/extracted

             echo "==== Files Extracted Inside venv ==== "
             ls -la /agent/_work/1/a/extracted/env

             echo "==== Files Extracted Inside oracle directory ==== "
             ls -la /agent/_work/1/a/extracted/env/oracle

             echo "==== Files Extracted Inside lib directory ==== "
             ls -la /agent/_work/1/a/extracted/env/lib/

             echo "==== Files Extracted Inside lib64 directory ==== "
             ls -la /agent/_work/1/a/extracted/env/lib64/

             echo "==== Files Extracted Inside bin directory ==== "
             ls -la /agent/_work/1/a/extracted/env/bin/

             echo "==== Files Extracted Inside include directory ==== "
             ls -la /agent/_work/1/a/extracted/env/include/


             echo "==== Files Extracted Inside lib python directory ==== "
             ls -la /agent/_work/1/a/extracted/env/lib/python3.10
             
             echo "==== Files Extracted Inside lib64 python directory ==== "
             ls -la /agent/_work/1/a/extracted/env/lib64/python3.10

             echo "==== Read pyvenv.cfg file ==== "
             cat /agent/_work/1/a/extracted/env/pyvenv.cfg

             echo "==== Activate Virtual Env ==== "
             
             
             #export PYTHONPATH=/agent/_work/1/a/extracted/env/bin/python3
             echo $PATH
             export PATH=$PATH:/agent/_work/1/s/env/bin/python3
             ls -la /etc/environment
             echo $PATH
             #source /agent/_work/1/a/extracted/env/bin/activate

             #echo "==== PiP List ==== "
             #/agent/_work/1/a/extracted/env/bin/pip list


            displayName: 'Read Extracted Archive'  