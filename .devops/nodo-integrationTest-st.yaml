pr: none
trigger: none

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: env
    displayName: Environment to Run Test
    type: string
    values:
      - dev
      - sit

variables:

  nodopath: /home/vsts/work/1/s/pagopa-nodo-dei-pagamenti-test
  artifactName: TestSuite
  downloadArtifactRelativePath: /agent/_work/1/
  

stages:
  - stage: python_env
    displayName: "Fetch Test Suite (${{ parameters.env }})"
    jobs:
      - job: 
        displayName: "python_env (${{ parameters.env }})"
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
            
            
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.x'
            inputs:
              versionSpec: '3.10'
            
            
          - script: |
              sudo apt-get install build-essential unzip
              mkdir /home/vsts/work/1/s/env
              cd /home/vsts/work/1/s/env
              sudo mkdir oracle
              cd oracle
              sudo wget https://download.oracle.com/otn_software/linux/instantclient/216000/instantclient-basic-linux.x64-21.6.0.0.0dbru.zip
              sudo unzip instantclient-basic-linux.x64-21.6.0.0.0dbru.zip
              sudo apt update
              sudo apt install libaio1
            displayName: 'Install Oracle Instant Client'
            


          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: /home/vsts/work/1/s/
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/nodo-dei-pagamenti.zip
              replaceExistingArchive: true

            
          - publish: $(Build.ArtifactStagingDirectory)/nodo-dei-pagamenti.zip
            displayName: "Publish Virtual Enviroment"
            artifact: $(artifactName)
            
            
  - stage: test_execute
    displayName: "Execute Test Suite (${{ parameters.env }})"
    dependsOn:
      - python_env
    variables:
      - group: nodo-${{ parameters.env }}
    condition: succeeded()
    jobs:
      - job: test_execute
        displayName: "execute test suite (${{ parameters.env }})"
        pool: $(deploy-pool-${{ parameters.env }})
        steps:
          - checkout: none
          
          - download: current
            artifact: $(artifactName)
            displayName: "Download Test Suite"     
                    
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: /agent/_work/1/TestSuite/nodo-dei-pagamenti.zip
              destinationFolder: '$(System.ArtifactsDirectory)/extracted'
              cleanDestinationFolder: true
              overwriteExistingFiles: false

          - script: |
             mkdir /agent/_work/1/a/extracted/src/integ-test/bdd-test/features/steps/requirements
             python3 -m pip install -r /agent/_work/1/a/extracted/requirements.txt -t /agent/_work/1/a/extracted/src/integ-test/bdd-test/features/steps/requirements
             echo "Get requirements"
             ls -la /agent/_work/1/a/extracted/src/integ-test/bdd-test/features/steps/requirements
            displayName: 'Install requirements using pip'
              
          - script: |
             export PYTHONPATH=$PYTHONPATH:/agent/_work/1/a/extracted/src/integ-test/bdd-test/features/steps/requirements
             export PATH=$PATH:/usr/local/bin
             whereis behave
             #/usr/local/bin/behave --junit-directory=report --junit /agent/_work/1/a/extracted/src/integ-test/bdd-test/features/NewMod3/flows/TestGenerazioneRicevute03/generazioneRicevute_flows_ko_PAnew.feature
            displayName: 'Edit Python Path Environment Variables'  

