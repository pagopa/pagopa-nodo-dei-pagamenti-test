parameters:
  - name: ENV
    displayName: Target Environment
    type: string
    default: dev
    values:
      - dev
      - uat

variables:

  ${{ if eq(parameters['ENV'], 'dev') }}:
    AZURE_SUBSCRIPTION: $(DEV_AZURE_SUBSCRIPTION_STORAGE_ACCOUNT)
    STORAGE_ACCOUNT_NAME: $(DEV_STORAGE_ACCOUNT_NAME)
    TIMEOUT: $(DEV_TEST_EXECUTION_MAX_MINUTES)

  ${{ if eq(parameters['ENV'], 'uat') }}:
    AZURE_SUBSCRIPTION: $(UAT_AZURE_SUBSCRIPTION_STORAGE_ACCOUNT)
    STORAGE_ACCOUNT_NAME: $(UAT_STORAGE_ACCOUNT_NAME)
    TIMEOUT: $(UAT_TEST_EXECUTION_MAX_MINUTES)

# Automatically triggered on PR
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - pagopa-nodo-dei-pagamenti-test

# Execute agents (jobs) on latest Ubuntu version.
# To change OS for a specific, override "pool" attribute inside the job definition
pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: pagopaCommons
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v15
      endpoint: 'io-azure-devops-github-ro'


steps:
  - task: AzureCLI@1
    displayName: 'Retrieve config.json'
    inputs:
      azureSubscription: '$(AZURE_SUBSCRIPTION)'
      scriptLocation: inlineScript
      inlineScript: |
        echo "BLOB_CONTAINER $(BLOB_CONTAINER)"
        echo "STORAGE_ACCOUNT_NAME $(STORAGE_ACCOUNT_NAME)"

        az storage blob download \
          --account-name $(STORAGE_ACCOUNT_NAME) \
          --container-name '$web' \
          --name "config.json" \
          --file "$(Build.SourcesDirectory)/src/integ-test/bdd-test/resources/config.json" \
          --auth-mode key
        
        echo "Config read ..."   
        cat "$(Build.SourcesDirectory)/src/integ-test/bdd-test/resources/config.json"

  # - bash: |
  #     docker build --rm --network=host -t nodo-test .
  #   displayName: 'Build env'

  # # timeout to prevent test deadlock
  # - bash: |
  #     timeout ${TIMEOUT}m docker run --rm --network=host -v $(Build.SourcesDirectory):/pagopa-nodo-dei-pagamenti-test -t nodo-test
  #   displayName: 'Test execution'

  - script: |
      apt-get update && apt-get install -y \
      curl \
      build-essential \
      python3 \
      python3-pip

      python3 -m pip install -r "$(Build.SourcesDirectory)/requirements.txt"
    displayName: 'setup dependency'

  - script: |
      mkdir -p '$(Build.SourcesDirectory)/report_results'
      behave -f html -o '$(Build.SourcesDirectory)/report_results/index.html' '$(Build.SourcesDirectory)/src/integ-test/bdd-test/features/'
      title="Behave Test Report"
      replace_title="Behave Test Report - $(date)"
      echo $title
      echo $replace_title
      cd $(Build.SourcesDirectory)/report_results
      sed -i "s|$title|$replace_title|g" index.html
      cat index.html | grep "<h1>Behave Test Report"
      #ls $(Build.SourcesDirectory)/report_results
      #mv $(Build.SourcesDirectory)/report_results/index.html.tmp $(Build.SourcesDirectory)/report_results/index.html
    displayName: 'Run api test'
    continueOnError: true 

  - task: AzureCLI@1
    displayName: 'Publish report'
    inputs:
      azureSubscription: '$(AZURE_SUBSCRIPTION)'
      scriptLocation: inlineScript
      inlineScript: |
        az config set extension.use_dynamic_install=yes_without_prompt
        
        az storage blob directory upload \
        -c '$web' \
        --account-name $(STORAGE_ACCOUNT_NAME) \
        -s '$(Build.SourcesDirectory)/report_results/*' \
        -d . --recursive \
        --auth-mode key


