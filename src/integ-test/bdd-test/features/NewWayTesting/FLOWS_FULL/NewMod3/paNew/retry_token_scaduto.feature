Feature: NM3 flows con PA New retry a token scaduto


    Background:
        Given systems up



    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_1 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp1: activate -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spo+ -> paSendRT, BIZ+ (NM3-4)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                |
            | creditorReferenceId         | 02$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PSP_ID                | #psp#                                       |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | None                  |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #id_station#                                |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #psp#                                       |
            | BROKER_PSP_ID              | #psp#                                       |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 02$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                |
            | ID                    | NotNone                                                                                              |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                          |
            | INSERTED_TIMESTAMP    | NotNone                                                                                              |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0







    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_2 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp1: activateV2 -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ -> paSendRT, BIZ+ (NM3-12)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                  |
            | creditorReferenceId         | 02$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                     | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_versione_primitive_2# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PSP_ID                | #psp#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 02$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #id_station#                                  |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #psp#                                         |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 02$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                        |
            | ID                    | NotNone                                                                                                      |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                      |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                            |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_versione_primitive_2# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0




    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_3 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp1: activate -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spo+ -> paSendRTV2, BIZ+ (NM3-33)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                |
            | creditorReferenceId         | 10$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
            | companyName                 | company                           |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PSP_ID                | #psp#                                       |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | company               |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#             |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #psp#                                       |
            | BROKER_PSP_ID              | #psp#                                       |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 10$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                |
            | ID                    | NotNone                                                                                              |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                          |
            | INSERTED_TIMESTAMP    | NotNone                                                                                              |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                  |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0




    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_4 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2: activateV2 -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ -> paSendRTV2, BIZ+ (NM3-40)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 10$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | company                             |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                     | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_versione_primitive_2# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PSP_ID                | #psp#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | company                 |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #psp#                                         |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 10$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                        |
            | ID                    | NotNone                                                                                                      |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                      |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                          |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_versione_primitive_2# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0






    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_5 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2: activateV2 -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spoV2- con resp PPT_TOKEN_SCADUTO_KO (NM3-41)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 10$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | company                             |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                     | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_versione_primitive_2# | #password# | $activatePaymentNoticeV2Response.paymentToken | KO      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired on outcome KO of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PSP_ID                | #psp#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | company                 |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #psp#                                         |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | KO                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 10$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                     |
            | ID                    | NotNone                                                   |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                       |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                     |
            | STATUS                | PAYING,CANCELLED,FAILED                                   |
            | INSERTED_TIMESTAMP    | NotNone                                                   |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                       |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken             |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 3 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | FAILED                                        |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value           |
            | ID                 | NotNone         |
            | STATUS             | PAYING,INSERTED |
            | INSERTED_TIMESTAMP | NotNone         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 2 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | INSERTED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_versione_primitive_2# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value KO in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO_KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired on outcome KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired on outcome KO in position 0







    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_6 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp1 activate e PSP vp2 spo : activate -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ -> paSendRT, BIZ+ (NM3-65)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                |
            | creditorReferenceId         | 02$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PSP_ID                | #psp#                                       |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | None                  |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #id_station#                                |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #psp#                                       |
            | BROKER_PSP_ID              | #psp#                                       |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 02$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                      |
            | ID                    | NotNone                                                                                                    |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                    |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                          |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0






    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_7 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp2 activate e PSP vp1 spo: activateV2 -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spo+ -> paSendRT, BIZ+ (NM3-69)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                  |
            | creditorReferenceId         | 02$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP | idBrokerPSP     | idChannel                     | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_versione_primitive_2# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PSP_ID                | #psp#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 02$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #id_station#                                  |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #psp#                                         |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 02$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                  |
            | ID                    | NotNone                                                                                                |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                            |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #canale_versione_primitive_2# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0






    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_8 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp1 activate e PSP vp2 spo: activate -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ -> paSendRTV2, BIZ+ (NM3-87)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                |
            | creditorReferenceId         | 10$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
            | companyName                 | company                           |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                     | password   | paymentToken                                | outcome |
            | #psp# | #id_broker_psp# | #canale_versione_primitive_2# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PSP_ID                | #psp#                                       |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | company               |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#             |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #psp#                                       |
            | BROKER_PSP_ID              | #psp#                                       |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 10$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                      |
            | ID                    | NotNone                                                                                                    |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                    |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_versione_primitive_2# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0





    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_9 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2 activate e PSP vp1 spo: activateV2 -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spo+ -> paSendRTV2, BIZ+ (NM3-91)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 10$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | company                             |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP | idBrokerPSP     | idChannel                     | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_versione_primitive_2# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PSP_ID                | #psp#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | company                 |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #psp#                                         |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 10$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                  |
            | ID                    | NotNone                                                                                                |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                            |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #canale_versione_primitive_2# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0





    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_10 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp1 e con broadcast paPrinc=paSec standin e flag invioReceiptStandin=true: activate -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2.(scadenza sessione), mod3cancelV2 BIZ-, spo+ -> paSendRTV2 verso standin, 2 x paSendRTV2 a broadcast PA principale che √® anche secondaria BIZ+ (NM3-125)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '16632' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1160001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table CANALI_NODO the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '16647' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value true
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter station.stand-in on configuration keys with value 66666666666_08
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 2000           | 50.00  |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                |
            | creditorReferenceId         | 47$iuv                            |
            | paymentAmount               | 50.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | IBAN                        | IT45R0760103200000000001016       |
            | fiscalCodePA1               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA4               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA5               | $activatePaymentNotice.fiscalCode |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
            | companyName                 | companyName                       |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 47$iuv                                      |
            | PSP_ID                | #psp#                                       |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | companyName           |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                             |
            | STATION_ID                 | standin                                     |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #psp#                                       |
            | BROKER_PSP_ID              | #id_broker_psp#                             |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                       |
            | ID                       | NotNone                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666                 |
            | IBAN                     | IT45R0760103200000000001016 |
            | AMOUNT                   | 10                          |
            | REMITTANCE_INFORMATION   | NotNone                     |
            | TRANSFER_CATEGORY        | NotNone                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                   |
            | VALID                    | Y                           |
            | FK_POSITION_PAYMENT      | NotNone                     |
            | INSERTED_TIMESTAMP       | NotNone                     |
            | UPDATED_TIMESTAMP        | NotNone                     |
            | FK_PAYMENT_PLAN          | NotNone                     |
            | INSERTED_BY              | activatePaymentNotice       |
            | UPDATED_BY               | activatePaymentNotice       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                       |
            | ID                    | NotNone                                                                                     |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                           |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                         |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT                                          |
            | INSERTED_TIMESTAMP    | NotNone                                                                                     |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                 |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 5 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 47$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTICE_SENT                                 |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 5
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 47$iuv in position 0
        And from $activatePaymentNoticeResp.standin xml check value true in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentV2Req.idStation xml check value standin in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentTokens.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ principale standin
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | REQ                                         |
            | ESITO                    | INVIATA_KO                                  |
            | IDENTIFICATIVO_EROGATORE | standin                                     |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paSendRTV2Req.idStation xml check value standin in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 REQ broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | REQ                                         |
            | ESITO                    | INVIATA                                     |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Req
        And from $paSendRTV2BC1Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC1Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2BC1Req.idStation xml check value 66666666666_09 in position 0
        And from $paSendRTV2BC1Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2BC1Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2BC1Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2BC1Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2BC1Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | RESP                                        |
            | ESITO                    | RICEVUTA                                    |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Resp
        And from $paSendRTV2BC1Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ broadcast 2 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | REQ                                         |
            | ESITO                    | INVIATA                                     |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC2Req
        And from $paSendRTV2BC2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2BC2Req.idStation xml check value 66666666666_08 in position 0
        And from $paSendRTV2BC2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2BC2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2BC2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2BC2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2BC2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2BC2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2BC2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $paSendRTV2BC2Req.receipt.standIn xml check value true in position 0
        # paSendRTV2 RESP broadcast 2 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | RESP                                        |
            | ESITO                    | RICEVUTA                                    |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC2Resp
        And from $paSendRTV2BC2Resp.outcome xml check value OK in position 0





    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_11 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp1 activate e PSP vp2 spo e con broadcast paPrinc=paSec standin e flag invioReceiptStandin=true: activate -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2.(scadenza sessione), mod3cancelV2 BIZ-, spo+ -> paSendRTV2 verso standin, 2 x paSendRTV2 a broadcast PA principale che √® anche secondaria BIZ+ (NM3-126)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '16632' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1160001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table CANALI_NODO the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '16647' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value true
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter station.stand-in on configuration keys with value 66666666666_08
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP | idBrokerPSP | idChannel                    | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 2000           | 50.00  |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                |
            | creditorReferenceId         | 47$iuv                            |
            | paymentAmount               | 50.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | IBAN                        | IT45R0760103200000000001016       |
            | fiscalCodePA1               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA4               | $activatePaymentNotice.fiscalCode |
            | fiscalCodePA5               | $activatePaymentNotice.fiscalCode |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
            | companyName                 | companyName                       |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 47$iuv                                      |
            | PSP_ID                | #psp#                                       |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | companyName           |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                             |
            | STATION_ID                 | standin                                     |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #psp#                                       |
            | BROKER_PSP_ID              | #id_broker_psp#                             |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                       |
            | ID                       | NotNone                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666                 |
            | IBAN                     | IT45R0760103200000000001016 |
            | AMOUNT                   | 10                          |
            | REMITTANCE_INFORMATION   | NotNone                     |
            | TRANSFER_CATEGORY        | NotNone                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                   |
            | VALID                    | Y                           |
            | FK_POSITION_PAYMENT      | NotNone                     |
            | INSERTED_TIMESTAMP       | NotNone                     |
            | UPDATED_TIMESTAMP        | NotNone                     |
            | FK_PAYMENT_PLAN          | NotNone                     |
            | INSERTED_BY              | activatePaymentNotice       |
            | UPDATED_BY               | activatePaymentNotice       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                             |
            | ID                    | NotNone                                                                                           |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                 |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                               |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT                                                |
            | INSERTED_TIMESTAMP    | NotNone                                                                                           |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                               |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                       |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 5 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 47$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTICE_SENT                                 |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 5
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 47$iuv in position 0
        And from $activatePaymentNoticeResp.standin xml check value true in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentV2Req.idStation xml check value standin in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ principale standin
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | REQ                                         |
            | ESITO                    | INVIATA_KO                                  |
            | IDENTIFICATIVO_EROGATORE | standin                                     |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paSendRTV2Req.idStation xml check value standin in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 REQ broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | REQ                                         |
            | ESITO                    | INVIATA                                     |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Req
        And from $paSendRTV2BC1Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC1Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2BC1Req.idStation xml check value 66666666666_09 in position 0
        And from $paSendRTV2BC1Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2BC1Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2BC1Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2BC1Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2BC1Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | RESP                                        |
            | ESITO                    | RICEVUTA                                    |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Resp
        And from $paSendRTV2BC1Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ broadcast 2 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | REQ                                         |
            | ESITO                    | INVIATA                                     |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC2Req
        And from $paSendRTV2BC2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2BC2Req.idStation xml check value 66666666666_08 in position 0
        And from $paSendRTV2BC2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2BC2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2BC2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2BC2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2BC2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2BC2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferAmount xml check value 10 in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2BC2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2BC2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $paSendRTV2BC2Req.receipt.standIn xml check value true in position 0
        # paSendRTV2 RESP broadcast 2 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                |
            | PAYMENT_TOKEN            | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO        | RESP                                        |
            | ESITO                    | RICEVUTA                                    |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                              |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                            |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                      |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC2Resp
        And from $paSendRTV2BC2Resp.outcome xml check value OK in position 0




    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_12 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP POSTE vp1: activate Poste -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spo+ Poste -> paSendRT, BIZ+ (NM3-146)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                |
            | creditorReferenceId         | 02$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PSP_ID                | #pspPoste#                                  |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | None                  |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #id_station#                                |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #pspPoste#                                  |
            | BROKER_PSP_ID              | #brokerPspPoste#                            |
            | CHANNEL_ID                 | #channelPoste#                              |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 02$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                |
            | ID                    | NotNone                                                                                              |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                          |
            | INSERTED_TIMESTAMP    | NotNone                                                                                              |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0



    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_13 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP POSTE vp2: activateV2 Poste -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ Poste -> paSendRT, BIZ+ (NM3-147)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                  |
            | creditorReferenceId         | 02$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                  | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PSP_ID                | #pspPoste#                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 02$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #id_station#                                  |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #pspPoste#                                    |
            | BROKER_PSP_ID              | #brokerPspPoste#                              |
            | CHANNEL_ID                 | #channelPoste#                                |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 02$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                        |
            | ID                    | NotNone                                                                                                      |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                      |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                            |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0





    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_14 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP POSTE vp1 activate e PSP POSTE vp2 spo: activate Poste -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ Poste -> paSendRT, BIZ+ (NM3-148)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                |
            | creditorReferenceId         | 02$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PSP_ID                | #pspPoste#                                  |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | None                  |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #id_station#                                |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #pspPoste#                                  |
            | BROKER_PSP_ID              | #brokerPspPoste#                            |
            | CHANNEL_ID                 | #channelPoste#                              |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 02$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                      |
            | ID                    | NotNone                                                                                                    |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                    |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                          |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 02$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRT                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0





    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_15 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP POSTE vp2 activate e PSP POSTE vp1 spo: activateV2 Poste -> paGetPayment (scadenza sessione), mod3cancelV2 BIZ-, spo+ Poste -> paSendRT, BIZ+ (NM3-149)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 302$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPayment_noOptional initial XML paGetPayment
            | outcome                     | OK                                  |
            | creditorReferenceId         | 02$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                  | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PSP_ID                | #pspPoste#                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 02$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 02$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #id_station#                                  |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #pspPoste#                                    |
            | BROKER_PSP_ID              | #brokerPspPoste#                              |
            | CHANNEL_ID                 | #channelPoste#                                |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 02$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                  |
            | ID                    | NotNone                                                                                                |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                            |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 02$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 02$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idStation xml check value #id_station# in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 02$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idStation xml check value #id_station# in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 02$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTReq.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTResp
        And from $paSendRTResp.outcome xml check value OK in position 0




    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_16 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP POSTE vp1: activate Poste -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spo+ Poste -> paSendRTV2, BIZ+ (NM3-150)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                |
            | creditorReferenceId         | 10$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
            | companyName                 | company                           |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PSP_ID                | #pspPoste#                                  |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | company               |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#             |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #pspPoste#                                  |
            | BROKER_PSP_ID              | #brokerPspPoste#                            |
            | CHANNEL_ID                 | #channelPoste#                              |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 10$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                |
            | ID                    | NotNone                                                                                              |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                          |
            | INSERTED_TIMESTAMP    | NotNone                                                                                              |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                  |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                          |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0








    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_17 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP POSTE vp2: activateV2 Poste -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ Poste -> paSendRTV2, BIZ+ (NM3-151)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 10$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | company                             |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                  | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PSP_ID                | #pspPoste#                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | company                 |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #pspPoste#                                    |
            | BROKER_PSP_ID              | #brokerPspPoste#                              |
            | CHANNEL_ID                 | #channelPoste#                                |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 10$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                        |
            | ID                    | NotNone                                                                                                      |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                      |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                          |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0








    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_18 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP POSTE vp1 activate e PSP POSTE vp2 spo: activate Poste -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spoV2+ Poste -> paSendRTV2, BIZ+ (NM3-152)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeBody_with_expiration_noOptional initial XML activatePaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                |
            | creditorReferenceId         | 10$iuv                            |
            | paymentAmount               | 10.00                             |
            | dueDate                     | 2021-12-31                        |
            | description                 | pagamentoTest                     |
            | entityUniqueIdentifierType  | G                                 |
            | entityUniqueIdentifierValue | 77777777777                       |
            | fullName                    | Massimo Benvegn√π                  |
            | transferAmount              | 10.00                             |
            | fiscalCodePA                | $activatePaymentNotice.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016       |
            | remittanceInformation       | testPaGetPayment                  |
            | transferCategory            | paGetPaymentTest                  |
            | companyName                 | company                           |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNotice to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNotice response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeResponse.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PSP_ID                | #pspPoste#                                  |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                     |
            | TOKEN_VALID_TO        | NotNone                                     |
            | DUE_DATE              | None                                        |
            | AMOUNT                | $activatePaymentNotice.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
            | INSERTED_BY           | activatePaymentNotice                       |
            | UPDATED_BY            | activatePaymentNotice                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                 |
            | ID                 | NotNone               |
            | DESCRIPTION        | NotNone               |
            | COMPANY_NAME       | company               |
            | OFFICE_NAME        | None                  |
            | DEBTOR_ID          | NotNone               |
            | INSERTED_TIMESTAMP | NotNone               |
            | UPDATED_TIMESTAMP  | NotNone               |
            | INSERTED_BY        | activatePaymentNotice |
            | UPDATED_BY         | activatePaymentNotice |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                         |
            | ID                    | NotNone                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                        |
            | DUE_DATE              | NotNone                       |
            | RETENTION_DATE        | None                          |
            | AMOUNT                | $activatePaymentNotice.amount |
            | FLAG_FINAL_PAYMENT    | N                             |
            | INSERTED_TIMESTAMP    | NotNone                       |
            | UPDATED_TIMESTAMP     | NotNone                       |
            | METADATA              | None                          |
            | FK_POSITION_SERVICE   | NotNone                       |
            | INSERTED_BY           | activatePaymentNotice         |
            | UPDATED_BY            | activatePaymentNotice         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                       |
            | ID                         | NotNone                                     |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                      |
            | PAYMENT_TOKEN              | $activatePaymentNoticeResponse.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNotice.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#             |
            | STATION_VERSION            | 2                                           |
            | PSP_ID                     | #pspPoste#                                  |
            | BROKER_PSP_ID              | #brokerPspPoste#                            |
            | CHANNEL_ID                 | #channelPoste#                              |
            | AMOUNT                     | $activatePaymentNotice.amount               |
            | FEE                        | None                                        |
            | OUTCOME                    | OK                                          |
            | PAYMENT_METHOD             | None                                        |
            | PAYMENT_CHANNEL            | NA                                          |
            | TRANSFER_DATE              | None                                        |
            | PAYER_ID                   | None                                        |
            | INSERTED_TIMESTAMP         | NotNone                                     |
            | UPDATED_TIMESTAMP          | NotNone                                     |
            | FK_PAYMENT_PLAN            | NotNone                                     |
            | RPT_ID                     | None                                        |
            | PAYMENT_TYPE               | MOD3                                        |
            | CARRELLO_ID                | None                                        |
            | ORIGINAL_PAYMENT_TOKEN     | None                                        |
            | FLAG_IO                    | N                                           |
            | RICEVUTA_PM                | None                                        |
            | FLAG_PAYPAL                | None                                        |
            | FLAG_ACTIVATE_RESP_MISSING | None                                        |
            | TRANSACTION_ID             | None                                        |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                             |
            | ID                       | NotNone                           |
            | CREDITOR_REFERENCE_ID    | 10$iuv                            |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNotice.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016       |
            | AMOUNT                   | $activatePaymentNotice.amount     |
            | REMITTANCE_INFORMATION   | NotNone                           |
            | TRANSFER_CATEGORY        | NotNone                           |
            | TRANSFER_IDENTIFIER      | 1                                 |
            | VALID                    | Y                                 |
            | FK_POSITION_PAYMENT      | NotNone                           |
            | INSERTED_TIMESTAMP       | NotNone                           |
            | UPDATED_TIMESTAMP        | NotNone                           |
            | FK_PAYMENT_PLAN          | NotNone                           |
            | INSERTED_BY              | activatePaymentNotice             |
            | UPDATED_BY               | activatePaymentNotice             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                      |
            | ID                    | NotNone                                                                                                    |
            | PA_FISCAL_CODE        | $activatePaymentNotice.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNotice.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                    |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNotice,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                       |
            | ID                    | NotNone                                     |
            | FK_POSITION_PAYMENT   | NotNone                                     |
            | CREDITOR_REFERENCE_ID | 10$iuv                                      |
            | PAYMENT_TOKEN         | $activatePaymentNoticeResponse.paymentToken |
            | STATUS                | NOTIFIED                                    |
            | INSERTED_TIMESTAMP    | NotNone                                     |
            | UPDATED_TIMESTAMP     | NotNone                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC              |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC              |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                        |
            | NOTICE_ID      | $activatePaymentNotice.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNotice.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC           |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                        |
            | NOTICE_ID  | $activatePaymentNotice.noticeNumber |
            | ORDER BY   | ID ASC                              |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                |
            | ID_SESSIONE | $activatePaymentNoticeResponse.paymentToken |
        # RE #####
        # activatePaymentNotice REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNotice.amount in position 0
        # activatePaymentNotice RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | activatePaymentNotice                       |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNotice.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                              |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentToken xml check value $activatePaymentNoticeResponse.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                        |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                         |
            | ESITO              | INVIATA                                     |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNotice.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNotice.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNotice.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                |
            | PAYMENT_TOKEN      | $activatePaymentNoticeResponse.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                        |
            | ESITO              | RICEVUTA                                    |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                            |
            | ORDER BY           | DATA_ORA_EVENTO ASC                         |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0






    @ALL @FLOW @FLOW_FULL @NMU @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_19 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP POSTE vp2 activate e PSP POSTE vp1 spo: activateV2 Poste -> paGetPaymentV2 (scadenza sessione), mod3cancelV2 BIZ-, spo+ Poste -> paSendRTV2, BIZ+ (NM3-153)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And from body with datatable horizontal verifyPaymentNoticeBody_noOptional initial XML verifyPaymentNotice
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 10.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        Given from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_noOptional initial XML activatePaymentNoticeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | expirationTime | amount |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310$iuv      | 2000           | 10.00  |
        And from body with datatable vertical paGetPaymentV2_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 10$iuv                              |
            | paymentAmount               | 10.00                               |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 10.00                               |
            | fiscalCodePA                | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                        | IT45R0760103200000000001016         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | company                             |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                  | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PSP_ID                | #pspPoste#                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | TOKEN_VALID_FROM      | NotNone                                       |
            | TOKEN_VALID_TO        | NotNone                                       |
            | DUE_DATE              | None                                          |
            | AMOUNT                | $activatePaymentNoticeV2.amount               |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
            | INSERTED_BY           | activatePaymentNoticeV2                       |
            | UPDATED_BY            | activatePaymentNoticeV2                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | company                 |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | $activatePaymentNoticeV2.fiscalCode           |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #pspPoste#                                    |
            | BROKER_PSP_ID              | #brokerPspPoste#                              |
            | CHANNEL_ID                 | #channelPoste#                                |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                               |
            | ID                       | NotNone                             |
            | CREDITOR_REFERENCE_ID    | 10$iuv                              |
            | PA_FISCAL_CODE_SECONDARY | $activatePaymentNoticeV2.fiscalCode |
            | IBAN                     | IT45R0760103200000000001016         |
            | AMOUNT                   | $activatePaymentNoticeV2.amount     |
            | REMITTANCE_INFORMATION   | NotNone                             |
            | TRANSFER_CATEGORY        | NotNone                             |
            | TRANSFER_IDENTIFIER      | 1                                   |
            | VALID                    | Y                                   |
            | FK_POSITION_PAYMENT      | NotNone                             |
            | INSERTED_TIMESTAMP       | NotNone                             |
            | UPDATED_TIMESTAMP        | NotNone                             |
            | FK_PAYMENT_PLAN          | NotNone                             |
            | INSERTED_BY              | activatePaymentNoticeV2             |
            | UPDATED_BY               | activatePaymentNoticeV2             |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                  |
            | ID                    | NotNone                                                                                                |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                            |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # PM_SESSION_DATA
        And verify 0 record for the table PM_SESSION_DATA retrived by the query on db nodo_online with where datatable horizontal
            | where_keys  | where_values                                  |
            | ID_SESSIONE | $activatePaymentNoticeV2Response.paymentToken |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value company in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        And from $paSendRTV2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0





    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_20 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp2, con broadcast paPrinc=paSec con GEC e standin: activateV2 -> paGetPayment standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ -> paSendRT principale standin,  paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie BIZ+ (NM3-117)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And update parameter gec.enabled on configuration keys with value true
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value true
        And update parameter station.stand-in on configuration keys with value 66666666666_01
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPayment_5transfer_noOptional initial XML paGetPayment
            | outcome                     | OK                                  |
            | creditorReferenceId         | 47$iuv                              |
            | paymentAmount               | 10000.00                            |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 2000.00                             |
            | IBAN                        | IT45R0760103200000000001016         |
            | fiscalCodePA1               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA4               | 88888888888                         |
            | fiscalCodePA5               | 90000000001                         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666,66666666666,66666666666,88888888888,90000000001 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                               |
            | ID                    | NotNone                                                                                             |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                 |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                               |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                             |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                   |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                       |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 5 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_SENT                                   |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                |
            | ID                 | NotNone              |
            | STATUS             | PAYING,INSERTED,PAID |
            | INSERTED_TIMESTAMP | NotNone              |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 3 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value   |
            | ID                  | NotNone |
            | STATUS              | PAID    |
            | INSERTED_TIMESTAMP  | NotNone |
            | UPDATED_TIMESTAMP   | NotNone |
            | FK_POSITION_SERVICE | NotNone |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 5
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 47$iuv in position 0
        And from $activatePaymentNoticeResp.suggestedUserFee xml check value 50 in position 0
        And from $activatePaymentNoticeResp.suggestedPaFee xml check value 0 in position 0
        And from $activatePaymentNoticeResp.suggestedIdBundle xml check value NotNone in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentReq.idStation xml check value standin in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ standin
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA_KO                                    |
            | IDENTIFICATIVO_EROGATORE | standin                                       |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value irraggiungibile in position 0
        And from $paSendRTReq.idStation xml check value standin in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $paSendRTReq.receipt.standIn xml check value true in position 0
        # paSendRT REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecReq
        And from $paSendRTSecReq.idPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idStation xml check value 88888888888_01 in position 0
        And from $paSendRTSecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTSecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTSecReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTSecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTSecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTSecReq.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTSecReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecResp
        And from $paSendRTSecResp.outcome xml check value OK in position 0
        # paSendRTV2 REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecReq
        And from $paSendRTV2SecReq.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2SecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2SecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2SecReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2SecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2SecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2SecReq.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTV2SecReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecResp
        And from $paSendRTV2SecResp.outcome xml check value OK in position 0






    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_21 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2, con broadcast paPrinc=paSec con GEC e standin: activateV2 -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ -> paSendRT principale standin,  paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie BIZ+ (NM3-119)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table CANALI_NODO the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '100' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value true
        And update parameter station.stand-in on configuration keys with value 66666666666_08
        And update parameter gec.enabled on configuration keys with value true
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 47$iuv                              |
            | paymentAmount               | 10000.00                            |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 2000.00                             |
            | IBAN                        | IT45R0760103200000000001016         |
            | fiscalCodePA1               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA4               | 88888888888                         |
            | fiscalCodePA5               | 90000000001                         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | companyName                         |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666,66666666666,66666666666,88888888888,90000000001 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                               |
            | ID                    | NotNone                                                                                             |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                 |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                               |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                             |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                 |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                       |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 5 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_SENT                                   |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 47$iuv in position 0
        And from $activatePaymentNoticeV2Resp.suggestedUserFee xml check value 50 in position 0
        And from $activatePaymentNoticeV2Resp.suggestedPaFee xml check value 0 in position 0
        And from $activatePaymentNoticeV2Resp.suggestedIdBundle xml check value NotNone in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentV2Req.idStation xml check value standin in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA_KO                                    |
            | IDENTIFICATIVO_EROGATORE | standin                                       |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paSendRTV2Req.idStation xml check value standin in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $paSendRTV2Req.receipt.standIn xml check value true in position 0
        # paSendRTV2 REQ broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Req
        And from $paSendRTV2BC1Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.idStation xml check value 66666666666_09 in position 0
        And from $paSendRTV2BC1Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2BC1Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2BC1Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2BC1Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2BC1Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Resp
        And from $paSendRTV2BC1Resp.outcome xml check value OK in position 0
        # paSendRT REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecReq
        And from $paSendRTSecReq.idPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idStation xml check value 88888888888_01 in position 0
        And from $paSendRTSecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTSecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTSecReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTSecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTSecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTSecReq.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTSecReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecResp
        And from $paSendRTSecResp.outcome xml check value OK in position 0
        # paSendRTV2 REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecReq
        And from $paSendRTV2SecReq.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2SecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2SecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2SecReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2SecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2SecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2SecReq.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTV2SecReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecResp
        And from $paSendRTV2SecResp.outcome xml check value OK in position 0




    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_22 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp2 con broadcast paPrinc=paSec con GEC, standin e invioReceiptStandin = false: activateV2 -> paGetPayment standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ ->  no invio receipt (solo receipt, no recipient) (NM3-121)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And update parameter gec.enabled on configuration keys with value true
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value false
        And update parameter station.stand-in on configuration keys with value 66666666666_01
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPayment_5transfer_noOptional initial XML paGetPayment
            | outcome                     | OK                                  |
            | creditorReferenceId         | 47$iuv                              |
            | paymentAmount               | 10000.00                            |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 2000.00                             |
            | IBAN                        | IT45R0760103200000000001016         |
            | fiscalCodePA1               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA4               | 88888888888                         |
            | fiscalCodePA5               | 90000000001                         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666,66666666666,66666666666,88888888888,90000000001 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                          |
            | ID                    | NotNone                                                                        |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                            |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                          |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED                                         |
            | INSERTED_TIMESTAMP    | NotNone                                                                        |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                  |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 4 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_GENERATED                              |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                |
            | ID                 | NotNone              |
            | STATUS             | PAYING,INSERTED,PAID |
            | INSERTED_TIMESTAMP | NotNone              |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 3 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value   |
            | ID                  | NotNone |
            | STATUS              | PAID    |
            | INSERTED_TIMESTAMP  | NotNone |
            | UPDATED_TIMESTAMP   | NotNone |
            | FK_POSITION_SERVICE | NotNone |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeReq
        And from $activatePaymentNoticeReq.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeReq.password xml check value #password# in position 0
        And from $activatePaymentNoticeReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeResp
        And from $activatePaymentNoticeResp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeResp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeResp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeResp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeResp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeResp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 5
        And from $activatePaymentNoticeResp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeResp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeResp.creditorReferenceId xml check value 47$iuv in position 0
        And from $activatePaymentNoticeResp.suggestedUserFee xml check value 50 in position 0
        And from $activatePaymentNoticeResp.suggestedPaFee xml check value 0 in position 0
        And from $activatePaymentNoticeResp.suggestedIdBundle xml check value NotNone in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentReq.idStation xml check value standin in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentResp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRT RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |


    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_23 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2 con broadcast paPrinc=paSec con GEC, standin e invioReceiptStandin = false: activateV2 -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ ->  no invio receipt (solo receipt, no recipient) (NM3-123)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table CANALI_NODO the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '100' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value false
        And update parameter station.stand-in on configuration keys with value 66666666666_08
        And update parameter gec.enabled on configuration keys with value true
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 47$iuv                              |
            | paymentAmount               | 10000.00                            |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 2000.00                             |
            | IBAN                        | IT45R0760103200000000001016         |
            | fiscalCodePA1               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA4               | 88888888888                         |
            | fiscalCodePA5               | 90000000001                         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | companyName                         |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666,66666666666,66666666666,88888888888,90000000001 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                          |
            | ID                    | NotNone                                                                        |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                            |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                          |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED                                         |
            | INSERTED_TIMESTAMP    | NotNone                                                                        |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                            |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                  |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 4 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_GENERATED                              |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                |
            | ID                 | NotNone              |
            | STATUS             | PAYING,INSERTED,PAID |
            | INSERTED_TIMESTAMP | NotNone              |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 3 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value   |
            | ID                  | NotNone |
            | STATUS              | PAID    |
            | INSERTED_TIMESTAMP  | NotNone |
            | UPDATED_TIMESTAMP   | NotNone |
            | FK_POSITION_SERVICE | NotNone |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 47$iuv in position 0
        And from $activatePaymentNoticeV2Resp.suggestedUserFee xml check value 50 in position 0
        And from $activatePaymentNoticeV2Resp.suggestedPaFee xml check value 0 in position 0
        And from $activatePaymentNoticeV2Resp.suggestedIdBundle xml check value NotNone in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentV2Req.idStation xml check value standin in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRT RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |







    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_24 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2 activate e PSP vp1 spo, con broadcast paPrinc=paSec con GEC e standin: activateV2 -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spo+ -> paSendRTV2 principale standin,  paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie BIZ+ (NM3-127)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table CANALI_NODO the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '100' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value true
        And update parameter station.stand-in on configuration keys with value 66666666666_08
        And update parameter gec.enabled on configuration keys with value true
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 47$iuv                              |
            | paymentAmount               | 10000.00                            |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 2000.00                             |
            | IBAN                        | IT45R0760103200000000001016         |
            | fiscalCodePA1               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA4               | 88888888888                         |
            | fiscalCodePA5               | 90000000001                         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | companyName                         |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666,66666666666,66666666666,88888888888,90000000001 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                         |
            | ID                    | NotNone                                                                                       |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                           |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                         |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT                                            |
            | INSERTED_TIMESTAMP    | NotNone                                                                                       |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                           |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                 |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 5 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_SENT                                   |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 47$iuv in position 0
        And from $activatePaymentNoticeV2Resp.suggestedUserFee xml check value 50 in position 0
        And from $activatePaymentNoticeV2Resp.suggestedPaFee xml check value 0 in position 0
        And from $activatePaymentNoticeV2Resp.suggestedIdBundle xml check value NotNone in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentV2Req.idStation xml check value standin in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA_KO                                    |
            | IDENTIFICATIVO_EROGATORE | standin                                       |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paSendRTV2Req.idStation xml check value standin in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $paSendRTV2Req.receipt.standIn xml check value true in position 0
        # paSendRTV2 REQ broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Req
        And from $paSendRTV2BC1Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.idBrokerPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.idStation xml check value 66666666666_09 in position 0
        And from $paSendRTV2BC1Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2BC1Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2BC1Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2BC1Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2BC1Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Resp
        And from $paSendRTV2BC1Resp.outcome xml check value OK in position 0
        # paSendRT REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecReq
        And from $paSendRTSecReq.idPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idStation xml check value 88888888888_01 in position 0
        And from $paSendRTSecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTSecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTSecReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTSecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTSecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTSecReq.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTSecReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecResp
        And from $paSendRTSecResp.outcome xml check value OK in position 0
        # paSendRTV2 REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecReq
        And from $paSendRTV2SecReq.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2SecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2SecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2SecReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2SecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2SecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2SecReq.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTV2SecReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecResp
        And from $paSendRTV2SecResp.outcome xml check value OK in position 0







    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_25 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp2, con broadcast paPrinc!=paSec con GEC e standin: activateV2 -> paGetPayment standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ -> invio paSendRT verso stazione principale standin, paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie, no paSendRT/V2 verso broadcast PA principale. BIZ+ (NM3-118)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4329' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11991' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '13' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15134' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15133' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '7' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '15131' under macro update_query on db nodo_cfg
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter gec.enabled on configuration keys with value true
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value true
        And update parameter station.stand-in on configuration keys with value 66666666666_01
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPayment_5transfer_noOptional initial XML paGetPayment
            | outcome                     | OK                          |
            | creditorReferenceId         | 47$iuv                      |
            | paymentAmount               | 10000.00                    |
            | dueDate                     | 2021-12-31                  |
            | description                 | pagamentoTest               |
            | entityUniqueIdentifierType  | G                           |
            | entityUniqueIdentifierValue | 77777777777                 |
            | fullName                    | Massimo Benvegn√π            |
            | transferAmount              | 2000.00                     |
            | IBAN                        | IT45R0760103200000000001016 |
            | fiscalCodePA1               | 90000000001                 |
            | fiscalCodePA2               | 90000000002                 |
            | fiscalCodePA3               | 90000000003                 |
            | fiscalCodePA4               | 88888888888                 |
            | fiscalCodePA5               | 88888888888                 |
            | remittanceInformation       | testPaGetPayment            |
            | transferCategory            | paGetPaymentTest            |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 90000000001,90000000002,90000000003,88888888888,88888888888 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                               |
            | ID                    | NotNone                                                                                             |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                 |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                               |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                             |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                                                   |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                       |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 5 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_SENT                                   |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                |
            | ID                 | NotNone              |
            | STATUS             | PAYING,INSERTED,PAID |
            | INSERTED_TIMESTAMP | NotNone              |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 3 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value   |
            | ID                  | NotNone |
            | STATUS              | PAID    |
            | INSERTED_TIMESTAMP  | NotNone |
            | UPDATED_TIMESTAMP   | NotNone |
            | FK_POSITION_SERVICE | NotNone |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 47$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentReq.idStation xml check value standin in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ###TRANSFER 2
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ###TRANSFER 3
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ###TRANSFER 4
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ###TRANSFER 5
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000002 in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value 90000000003 in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ 1 standin
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA_KO                                    |
            | IDENTIFICATIVO_EROGATORE | standin                                       |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTReq
        And from $paSendRTReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.idBrokerPA xml check value irraggiungibile in position 0
        And from $paSendRTReq.idStation xml check value standin in position 0
        And from $paSendRTReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTReq.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTReq.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTReq.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $paSendRTReq.receipt.standIn xml check value true in position 0
        # paSendRT REQ BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Req
        And from $paSendRT_BC1Req.idPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idStation xml check value 90000000001_08 in position 0
        And from $paSendRT_BC1Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC1Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC1Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC1Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC1Req.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC1Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Resp
        And from $paSendRT_BC1Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Req
        And from $paSendRT_BC2Req.idPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idStation xml check value 90000000003_01 in position 0
        And from $paSendRT_BC2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC2Req.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Resp
        And from $paSendRT_BC2Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Req
        And from $paSendRT_BC3Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idStation xml check value 88888888888_01 in position 0
        And from $paSendRT_BC3Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC3Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC3Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC3Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC3Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC3Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC3Req.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC3Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Resp
        And from $paSendRT_BC3Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Req
        And from $paSendRT_BC4Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idStation xml check value 88888888888_02 in position 0
        And from $paSendRT_BC4Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC4Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC4Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC4Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC4Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC4Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC4Req.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC4Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Resp
        And from $paSendRT_BC4Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Req
        And from $paSendRTV2_BC5Req.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2_BC5Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC5Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC5Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC5Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2_BC5Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC5Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC5Req.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC5Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Resp
        And from $paSendRTV2_BC5Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Req
        And from $paSendRTV2_BC6Req.idPA xml check value 90000000002 in position 0
        And from $paSendRTV2_BC6Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.idStation xml check value 90000000001_01 in position 0
        And from $paSendRTV2_BC6Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC6Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC6Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC6Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2_BC6Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC6Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC6Req.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC6Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Resp
        And from $paSendRTV2_BC6Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Req
        And from $paSendRTV2_BC7Req.idPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idStation xml check value 90000000003_02 in position 0
        And from $paSendRTV2_BC7Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC7Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC7Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC7Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2_BC7Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC7Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC7Req.receipt.companyName xml check value NA in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC7Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Resp
        And from $paSendRTV2_BC7Resp.outcome xml check value OK in position 0
        # paSendRT BC1 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 BC2 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |




    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_26 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2, con broadcast paPrinc!=paSec con GEC e standin: activateV2 -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ -> paSendRTV2 principale, paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie, paSendRTV2 verso bradcast PA principale con vp2. BIZ+ (NM3-120)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4329' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11991' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '13' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15134' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15133' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '7' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '15131' under macro update_query on db nodo_cfg
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter gec.enabled on configuration keys with value true
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value true
        And update parameter station.stand-in on configuration keys with value 66666666666_08
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                          |
            | creditorReferenceId         | 47$iuv                      |
            | paymentAmount               | 10000.00                    |
            | dueDate                     | 2021-12-31                  |
            | description                 | pagamentoTest               |
            | entityUniqueIdentifierType  | G                           |
            | entityUniqueIdentifierValue | 77777777777                 |
            | fullName                    | Massimo Benvegn√π            |
            | transferAmount              | 2000.00                     |
            | IBAN                        | IT45R0760103200000000001016 |
            | fiscalCodePA1               | 90000000001                 |
            | fiscalCodePA2               | 90000000002                 |
            | fiscalCodePA3               | 90000000003                 |
            | fiscalCodePA4               | 88888888888                 |
            | fiscalCodePA5               | 88888888888                 |
            | remittanceInformation       | testPaGetPayment            |
            | transferCategory            | paGetPaymentTest            |
            | companyName                 | companyName                 |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 90000000001,90000000002,90000000003,88888888888,88888888888 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                               |
            | ID                    | NotNone                                                                                             |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                 |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                               |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                             |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                 |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                       |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 5 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_SENT                                   |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                |
            | ID                 | NotNone              |
            | STATUS             | PAYING,INSERTED,PAID |
            | INSERTED_TIMESTAMP | NotNone              |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 3 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value   |
            | ID                  | NotNone |
            | STATUS              | PAID    |
            | INSERTED_TIMESTAMP  | NotNone |
            | UPDATED_TIMESTAMP   | NotNone |
            | FK_POSITION_SERVICE | NotNone |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 47$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentV2Req.idStation xml check value standin in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000002 in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value 90000000003 in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ 1 standin
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA_KO                                    |
            | IDENTIFICATIVO_EROGATORE | standin                                       |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paSendRTV2Req.idStation xml check value standin in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $paSendRTV2Req.receipt.standIn xml check value true in position 0
        # paSendRT REQ BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Req
        And from $paSendRT_BC1Req.idPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idStation xml check value 90000000001_08 in position 0
        And from $paSendRT_BC1Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC1Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC1Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC1Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC1Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Resp
        And from $paSendRT_BC1Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Req
        And from $paSendRT_BC2Req.idPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idStation xml check value 90000000003_01 in position 0
        And from $paSendRT_BC2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC2Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC2Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Resp
        And from $paSendRT_BC2Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Req
        And from $paSendRT_BC3Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idStation xml check value 88888888888_01 in position 0
        And from $paSendRT_BC3Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC3Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC3Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC3Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC3Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC3Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC3Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC3Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Resp
        And from $paSendRT_BC3Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Req
        And from $paSendRT_BC4Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idStation xml check value 88888888888_02 in position 0
        And from $paSendRT_BC4Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC4Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC4Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC4Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRT_BC4Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC4Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC4Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC4Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRT RESP BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Resp
        And from $paSendRT_BC4Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Req
        And from $paSendRTV2_BC5Req.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2_BC5Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC5Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC5Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC5Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2_BC5Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC5Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC5Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC5Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Resp
        And from $paSendRTV2_BC5Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Req
        And from $paSendRTV2_BC6Req.idPA xml check value 90000000002 in position 0
        And from $paSendRTV2_BC6Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.idStation xml check value 90000000001_01 in position 0
        And from $paSendRTV2_BC6Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC6Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC6Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC6Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2_BC6Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC6Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC6Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC6Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Resp
        And from $paSendRTV2_BC6Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Req
        And from $paSendRTV2_BC7Req.idPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idStation xml check value 90000000003_02 in position 0
        And from $paSendRTV2_BC7Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC7Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC7Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC7Req.receipt.creditorReferenceId xml check value 47$iuv in position 0
        And from $paSendRTV2_BC7Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC7Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC7Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC7Req.receipt.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        # paSendRTV2 RESP BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Resp
        And from $paSendRTV2_BC7Resp.outcome xml check value OK in position 0
        # paSendRT BC1 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 BC2 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |






    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_27 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp1 e PSP vp2 con broadcast paPrinc!=paSec con GEC, standin e invioReceiptStandin = false: activateV2 -> paGetPayment standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ ->  no invio receipt (solo receipt, no recipient) (NM3-122)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4329' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11991' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '13' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15134' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15133' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '7' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '15131' under macro update_query on db nodo_cfg
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter gec.enabled on configuration keys with value true
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value false
        And update parameter station.stand-in on configuration keys with value 66666666666_01
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPayment_5transfer_noOptional initial XML paGetPayment
            | outcome                     | OK                          |
            | creditorReferenceId         | 47$iuv                      |
            | paymentAmount               | 10000.00                    |
            | dueDate                     | 2021-12-31                  |
            | description                 | pagamentoTest               |
            | entityUniqueIdentifierType  | G                           |
            | entityUniqueIdentifierValue | 77777777777                 |
            | fullName                    | Massimo Benvegn√π            |
            | transferAmount              | 2000.00                     |
            | IBAN                        | IT45R0760103200000000001016 |
            | fiscalCodePA1               | 90000000001                 |
            | fiscalCodePA2               | 90000000002                 |
            | fiscalCodePA3               | 90000000003                 |
            | fiscalCodePA4               | 88888888888                 |
            | fiscalCodePA5               | 88888888888                 |
            | remittanceInformation       | testPaGetPayment            |
            | transferCategory            | paGetPaymentTest            |
        And EC replies to nodo-dei-pagamenti with the paGetPayment
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #psp#       | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | None                    |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 90000000001,90000000002,90000000003,88888888888,88888888888 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                          |
            | ID                    | NotNone                                                                        |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                            |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                          |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED                                         |
            | INSERTED_TIMESTAMP    | NotNone                                                                        |
            | CREDITOR_REFERENCE_ID | $paGetPayment.creditorReferenceId                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                  |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 4 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_GENERATED                              |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                |
            | ID                 | NotNone              |
            | STATUS             | PAYING,INSERTED,PAID |
            | INSERTED_TIMESTAMP | NotNone              |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 3 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value   |
            | ID                  | NotNone |
            | STATUS              | PAID    |
            | INSERTED_TIMESTAMP  | NotNone |
            | UPDATED_TIMESTAMP   | NotNone |
            | FK_POSITION_SERVICE | NotNone |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 47$iuv in position 0
        # paGetPayment REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentReq
        And from $paGetPaymentReq.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentReq.idStation xml check value standin in position 0
        And from $paGetPaymentReq.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentReq.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentReq.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPayment RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPayment                                  |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentResp
        And from $paGetPaymentResp.outcome xml check value OK in position 0
        And from $paGetPaymentResp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentResp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentResp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentResp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ###TRANSFER 2
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ###TRANSFER 3
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ###TRANSFER 4
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ###TRANSFER 5
        And from $paGetPaymentResp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentResp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000002 in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value 90000000003 in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRT RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |





    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_28 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP vp2 con broadcast paPrinc!=paSec con GEC, standin e invioReceiptStandin = false: activateV2 -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ ->  no invio receipt (solo receipt, no recipient) (NM3-124)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4329' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11991' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '13' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15134' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15133' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '7' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '15131' under macro update_query on db nodo_cfg
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter gec.enabled on configuration keys with value true
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter FLAG_STANDIN = 'Y', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '1200001' under macro update_query on db nodo_cfg
        And update parameter invioReceiptStandin on configuration keys with value false
        And update parameter station.stand-in on configuration keys with value 66666666666_08
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | #creditor_institution_code# | 347#iuv#     | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                          |
            | creditorReferenceId         | 47$iuv                      |
            | paymentAmount               | 10000.00                    |
            | dueDate                     | 2021-12-31                  |
            | description                 | pagamentoTest               |
            | entityUniqueIdentifierType  | G                           |
            | entityUniqueIdentifierValue | 77777777777                 |
            | fullName                    | Massimo Benvegn√π            |
            | transferAmount              | 2000.00                     |
            | IBAN                        | IT45R0760103200000000001016 |
            | fiscalCodePA1               | 90000000001                 |
            | fiscalCodePA2               | 90000000002                 |
            | fiscalCodePA3               | 90000000003                 |
            | fiscalCodePA4               | 88888888888                 |
            | fiscalCodePA5               | 88888888888                 |
            | remittanceInformation       | testPaGetPayment            |
            | transferCategory            | paGetPaymentTest            |
            | companyName                 | companyName                 |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP | idBrokerPSP     | idChannel                    | password   | paymentToken                                  | outcome |
            | #psp# | #id_broker_psp# | #canale_ATTIVATO_PRESSO_PSP# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 47$iuv                                             |
            | PSP_ID                | #psp#                                              |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 47$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 47$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | irraggiungibile                               |
            | STATION_ID                 | standin                                       |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #psp#                                         |
            | BROKER_PSP_ID              | #id_broker_psp#                               |
            | CHANNEL_ID                 | #canale_ATTIVATO_PRESSO_PSP#                  |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 47$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 90000000001,90000000002,90000000003,88888888888,88888888888 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                          |
            | ID                    | NotNone                                                                        |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                            |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                          |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED                                         |
            | INSERTED_TIMESTAMP    | NotNone                                                                        |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                            |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                  |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 4 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 47$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTICE_GENERATED                              |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                |
            | ID                 | NotNone              |
            | STATUS             | PAYING,INSERTED,PAID |
            | INSERTED_TIMESTAMP | NotNone              |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 3 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value   |
            | ID                  | NotNone |
            | STATUS              | PAID    |
            | INSERTED_TIMESTAMP  | NotNone |
            | UPDATED_TIMESTAMP   | NotNone |
            | FK_POSITION_SERVICE | NotNone |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #psp# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 47$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value irraggiungibile in position 0
        And from $paGetPaymentV2Req.idStation xml check value standin in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 47$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesReq.idPspList.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesReq.idPspList.idPsp json check value #psp# in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000002 in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value 90000000003 in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #id_broker_psp# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #psp# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #psp# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #id_broker_psp# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #canale_ATTIVATO_PRESSO_PSP# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRT REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRT RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRT                                      |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 REQ NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 RESP NOTHING
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | INSERTED_TIMESTAMP ASC                        |







    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_29 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP POSTE vp2 con broadcast paPrinc!=paSec con GEC: verificaBollettino -> paVerify, activateV2 Poste -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spoV2+ Poste ->  paSendRTV2 verso stazione principale, paSendRTV2 a broadcast PA principale, paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie BIZ+ (NM3-128)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4329' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11991' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '13' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15134' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15133' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '7' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '15131' under macro update_query on db nodo_cfg
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter gec.enabled on configuration keys with value true
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal verificaBollettino_noOptional initial XML verificaBollettino
            | idPSP      | idBrokerPSP      | idChannel      | password   | ccPost    | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #ccPoste# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 50.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        And EC replies to nodo-dei-pagamenti with the paVerifyPaymentNotice
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | amount  | paymentMethod | touchPoint | expirationTime |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310$iuv      | 5000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                          |
            | creditorReferenceId         | 10$iuv                      |
            | paymentAmount               | 5000.00                     |
            | dueDate                     | 2021-12-31                  |
            | description                 | pagamentoTest               |
            | entityUniqueIdentifierType  | G                           |
            | entityUniqueIdentifierValue | 77777777777                 |
            | fullName                    | Massimo Benvegn√π            |
            | transferAmount              | 1000.00                     |
            | IBAN                        | IT45R0760103200000000001016 |
            | fiscalCodePA1               | 90000000001                 |
            | fiscalCodePA2               | 90000000002                 |
            | fiscalCodePA3               | 90000000003                 |
            | fiscalCodePA4               | 88888888888                 |
            | fiscalCodePA5               | 88888888888                 |
            | remittanceInformation       | testPaGetPayment            |
            | transferCategory            | paGetPaymentTest            |
            | companyName                 | companyName                 |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeV2Body_noOptional initial XML sendPaymentOutcomeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                  | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcomeV2 to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcomeV2 response
        And check description is paymentToken is expired of sendPaymentOutcomeV2 response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 10$iuv                                             |
            | PSP_ID                | #pspPoste#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | #intermediarioPA#                             |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #pspPoste#                                    |
            | BROKER_PSP_ID              | #brokerPspPoste#                              |
            | CHANNEL_ID                 | #channelPoste#                                |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 10$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 90000000001,90000000002,90000000003,88888888888,88888888888 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 1000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                        |
            | ID                    | NotNone                                                                                                      |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                          |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                        |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                                  |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                      |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                          |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                                |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,sendPaymentOutcomeV2,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #brokerPspPoste# in position 0
        And from $feesReq.idPspList.idChannel json check value #channelPoste# in position 0
        And from $feesReq.idPspList.idPsp json check value #pspPoste# in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000002 in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value 90000000003 in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #brokerPspPoste# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #channelPoste# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #pspPoste# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcomeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Req
        And from $sendPaymentOutcomeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeV2Req.password xml check value #password# in position 0
        And from $sendPaymentOutcomeV2Req.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeV2Req.outcome xml check value OK in position 0
        # sendPaymentOutcomeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcomeV2                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeV2Resp
        And from $sendPaymentOutcomeV2Resp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeV2Resp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeV2Resp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeV2Resp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ 1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | #stazione_versione_primitive_2#               |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP 1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | #stazione_versione_primitive_2#               |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_1Resp
        And from $paSendRTV2_1Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Req
        And from $paSendRT_BC1Req.idPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idStation xml check value 90000000001_08 in position 0
        And from $paSendRT_BC1Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC1Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC1Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC1Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC1Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Resp
        And from $paSendRT_BC1Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Req
        And from $paSendRT_BC2Req.idPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idStation xml check value 90000000003_01 in position 0
        And from $paSendRT_BC2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Resp
        And from $paSendRT_BC2Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Req
        And from $paSendRT_BC3Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idStation xml check value 88888888888_01 in position 0
        And from $paSendRT_BC3Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC3Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC3Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC3Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC3Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC3Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC3Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC3Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Resp
        And from $paSendRT_BC3Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Req
        And from $paSendRT_BC4Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idStation xml check value 88888888888_02 in position 0
        And from $paSendRT_BC4Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC4Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC4Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC4Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC4Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC4Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC4Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC4Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Resp
        And from $paSendRT_BC4Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Req
        And from $paSendRTV2_BC5Req.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2_BC5Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC5Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC5Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC5Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2_BC5Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC5Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC5Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC5Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Resp
        And from $paSendRTV2_BC5Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Req
        And from $paSendRTV2_BC6Req.idPA xml check value 90000000002 in position 0
        And from $paSendRTV2_BC6Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.idStation xml check value 90000000001_01 in position 0
        And from $paSendRTV2_BC6Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC6Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC6Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC6Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2_BC6Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC6Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC6Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC6Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Resp
        And from $paSendRTV2_BC6Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Req
        And from $paSendRTV2_BC7Req.idPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idStation xml check value 90000000003_02 in position 0
        And from $paSendRTV2_BC7Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC7Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC7Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC7Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2_BC7Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC7Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC7Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC7Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Resp
        And from $paSendRTV2_BC7Resp.outcome xml check value OK in position 0
        # paSendRT BC1 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 BC2 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |



    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_30 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP POSTE vp2 activate e PSP POSTE vp1 spo con broadcast paPrinc!=paSec con GEC: verificaBollettino -> paVerify, activateV2 Poste -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spo+ Poste ->  paSendRTV2 verso stazione principale, paSendRTV2 a broadcast PA principale, paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie BIZ+ (NM3-134)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4329' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11991' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '13' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15134' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '15133' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '7' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table STAZIONI the parameter VERSIONE_PRIMITIVE = '2', with where condition OBJ_ID = '15131' under macro update_query on db nodo_cfg
        And update parameter scheduler.jobName_paSendRt.enabled on configuration keys with value true
        And update parameter gec.enabled on configuration keys with value true
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal verificaBollettino_noOptional initial XML verificaBollettino
            | idPSP      | idBrokerPSP      | idChannel      | password   | ccPost    | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #ccPoste# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 50.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        And EC replies to nodo-dei-pagamenti with the paVerifyPaymentNotice
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | amount  | paymentMethod | touchPoint | expirationTime |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310$iuv      | 5000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                          |
            | creditorReferenceId         | 10$iuv                      |
            | paymentAmount               | 5000.00                     |
            | dueDate                     | 2021-12-31                  |
            | description                 | pagamentoTest               |
            | entityUniqueIdentifierType  | G                           |
            | entityUniqueIdentifierValue | 77777777777                 |
            | fullName                    | Massimo Benvegn√π            |
            | transferAmount              | 1000.00                     |
            | IBAN                        | IT45R0760103200000000001016 |
            | fiscalCodePA1               | 90000000001                 |
            | fiscalCodePA2               | 90000000002                 |
            | fiscalCodePA3               | 90000000003                 |
            | fiscalCodePA4               | 88888888888                 |
            | fiscalCodePA5               | 88888888888                 |
            | remittanceInformation       | testPaGetPayment            |
            | transferCategory            | paGetPaymentTest            |
            | companyName                 | companyName                 |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                  | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 10$iuv                                             |
            | PSP_ID                | #pspPoste#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | #intermediarioPA#                             |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #pspPoste#                                    |
            | BROKER_PSP_ID              | #brokerPspPoste#                              |
            | CHANNEL_ID                 | #channelPoste#                                |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 10$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 90000000001,90000000002,90000000003,88888888888,88888888888 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 1000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                  |
            | ID                    | NotNone                                                                                                |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                            |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #brokerPspPoste# in position 0
        And from $feesReq.idPspList.idChannel json check value #channelPoste# in position 0
        And from $feesReq.idPspList.idPsp json check value #pspPoste# in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value 90000000002 in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value 90000000003 in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #brokerPspPoste# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #channelPoste# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #pspPoste# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ 1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | #stazione_versione_primitive_2#               |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP 1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | #stazione_versione_primitive_2#               |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_1Resp
        And from $paSendRTV2_1Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Req
        And from $paSendRT_BC1Req.idPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.idStation xml check value 90000000001_08 in position 0
        And from $paSendRT_BC1Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC1Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC1Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC1Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC1Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC1
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC1Resp
        And from $paSendRT_BC1Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Req
        And from $paSendRT_BC2Req.idPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRT_BC2Req.idStation xml check value 90000000003_01 in position 0
        And from $paSendRT_BC2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC2
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC2Resp
        And from $paSendRT_BC2Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Req
        And from $paSendRT_BC3Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC3Req.idStation xml check value 88888888888_01 in position 0
        And from $paSendRT_BC3Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC3Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC3Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC3Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC3Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC3Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC3Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC3Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC3Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC3Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC3
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC3Resp
        And from $paSendRT_BC3Resp.outcome xml check value OK in position 0
        # paSendRT REQ BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Req
        And from $paSendRT_BC4Req.idPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRT_BC4Req.idStation xml check value 88888888888_02 in position 0
        And from $paSendRT_BC4Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRT_BC4Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRT_BC4Req.receipt.outcome xml check value OK in position 0
        And from $paSendRT_BC4Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRT_BC4Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRT_BC4Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRT_BC4Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRT_BC4Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRT_BC4Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRT_BC4Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP BC4
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRT_BC4Resp
        And from $paSendRT_BC4Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Req
        And from $paSendRTV2_BC5Req.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2_BC5Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC5Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC5Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC5Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2_BC5Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC5Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC5Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC5Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC5Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP BC5
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC5Resp
        And from $paSendRTV2_BC5Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Req
        And from $paSendRTV2_BC6Req.idPA xml check value 90000000002 in position 0
        And from $paSendRTV2_BC6Req.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.idStation xml check value 90000000001_01 in position 0
        And from $paSendRTV2_BC6Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC6Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC6Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC6Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2_BC6Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC6Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC6Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC6Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC6Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP BC6
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC6Resp
        And from $paSendRTV2_BC6Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Req
        And from $paSendRTV2_BC7Req.idPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idBrokerPA xml check value 90000000003 in position 0
        And from $paSendRTV2_BC7Req.idStation xml check value 90000000003_02 in position 0
        And from $paSendRTV2_BC7Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2_BC7Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2_BC7Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2_BC7Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2_BC7Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2_BC7Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2_BC7Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000002 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000003 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.transferAmount xml check value 1000 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2_BC7Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $paSendRTV2_BC7Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP BC7
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000003_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2_BC7Resp
        And from $paSendRTV2_BC7Resp.outcome xml check value OK in position 0
        # paSendRT BC1 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_02                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        # paSendRTV2 BC2 PA princ NO
        And verify 0 record for the table RE retrived by the query on db re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_08                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |



    @ALL @FLOW @FLOW_FULL @NM3 @NM3PANEW @NM3PANEWRETRY @NM3PANEWRETRY_FULL_31 @after
    Scenario: NM3 flow retry a token scaduto, FLOW con PA New vp2 e PSP POSTE vp2 activate e PSP POSTE vp1 spo con broadcast paPrinc=paSec con GEC: verificaBollettino -> paVerify, activateV2 Poste -> paGetPaymentV2 standin con 5 transfer, la PA principale fa parte dei transfer, la PA principale ha broadcast sia vp1 che vp2 -> getFees, mod3cancelV2 (scadenza sessione), spo+ Poste ->  paSendRTV2 verso stazione principale, paSendRTV2 a broadcast PA principale, paSendRT broadcast secondarie, paSendRTV2 broadcast secondarie BIZ+ (NM3-131)
        Given nodo-dei-pagamenti has config parameter default_durata_estensione_token_IO set to 1000
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16640' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1340001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '16641' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '1380001' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '4328' under macro update_query on db nodo_cfg
        And generic update through the query param_update_generic_where_condition of the table PA_STAZIONE_PA the parameter BROADCAST = 'Y', with where condition OBJ_ID = '11993' under macro update_query on db nodo_cfg
        And update parameter gec.enabled on configuration keys with value true
        And waiting after triggered refresh job ALL
        And from body with datatable horizontal verificaBollettino_noOptional initial XML verificaBollettino
            | idPSP      | idBrokerPSP      | idChannel      | password   | ccPost    | noticeNumber |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #ccPoste# | 310#iuv#     |
        And from body with datatable vertical paVerifyPaymentNotice_noOptional initial XML paVerifyPaymentNotice
            | outcome            | OK                          |
            | amount             | 50.00                       |
            | options            | EQ                          |
            | allCCP             | false                       |
            | paymentDescription | Pagamento di Test           |
            | fiscalCodePA       | #creditor_institution_code# |
            | companyName        | companyName                 |
        And EC replies to nodo-dei-pagamenti with the paVerifyPaymentNotice
        And from body with datatable horizontal activatePaymentNoticeV2Body_with_expiration_GEC_noOptional initial XML activatePaymentNoticeV2
            | idPSP      | idBrokerPSP      | idChannel      | password   | fiscalCode                  | noticeNumber | amount   | paymentMethod | touchPoint | expirationTime |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | #creditor_institution_code# | 310$iuv      | 10000.00 | PO            | PSP        | 2000           |
        And from body with datatable vertical paGetPaymentV2_5transfer_noOptional initial XML paGetPaymentV2
            | outcome                     | OK                                  |
            | creditorReferenceId         | 10$iuv                              |
            | paymentAmount               | 10000.00                            |
            | dueDate                     | 2021-12-31                          |
            | description                 | pagamentoTest                       |
            | entityUniqueIdentifierType  | G                                   |
            | entityUniqueIdentifierValue | 77777777777                         |
            | fullName                    | Massimo Benvegn√π                    |
            | transferAmount              | 2000.00                             |
            | IBAN                        | IT45R0760103200000000001016         |
            | fiscalCodePA1               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA2               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA3               | $activatePaymentNoticeV2.fiscalCode |
            | fiscalCodePA4               | 88888888888                         |
            | fiscalCodePA5               | 90000000001                         |
            | remittanceInformation       | testPaGetPayment                    |
            | transferCategory            | paGetPaymentTest                    |
            | companyName                 | companyName                         |
        And EC replies to nodo-dei-pagamenti with the paGetPaymentV2
        When psp sends SOAP activatePaymentNoticeV2 to nodo-dei-pagamenti
        Then check outcome is OK of activatePaymentNoticeV2 response
        Given wait 10 seconds for expiration
        When job mod3CancelV2 triggered after 4 seconds
        Then verify the HTTP status code of mod3CancelV2 response is 200
        Given from body with datatable horizontal sendPaymentOutcomeBody_noOptional initial XML sendPaymentOutcome
            | idPSP      | idBrokerPSP      | idChannel      | password   | paymentToken                                  | outcome |
            | #pspPoste# | #brokerPspPoste# | #channelPoste# | #password# | $activatePaymentNoticeV2Response.paymentToken | OK      |
        When PSP sends SOAP sendPaymentOutcome to nodo-dei-pagamenti
        Then check outcome is KO of sendPaymentOutcome response
        And check description is paymentToken is expired of sendPaymentOutcome response
        And wait 1 seconds for expiration
        # POSITION_ACTIVATE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                              |
            | ID                    | NotNone                                            |
            | CREDITOR_REFERENCE_ID | 10$iuv                                             |
            | PSP_ID                | #pspPoste#                                         |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken      |
            | TOKEN_VALID_FROM      | NotNone                                            |
            | TOKEN_VALID_TO        | NotNone                                            |
            | DUE_DATE              | None                                               |
            | AMOUNT                | $activatePaymentNoticeV2.amount                    |
            | INSERTED_TIMESTAMP    | NotNone                                            |
            | UPDATED_TIMESTAMP     | NotNone                                            |
            | INSERTED_BY           | activatePaymentNoticeV2                            |
            | UPDATED_BY            | activatePaymentNoticeV2                            |
            | SUGGESTED_IDBUNDLE    | $activatePaymentNoticeV2Response.suggestedIdBundle |
            | SUGGESTED_IDCIBUNDLE  | None                                               |
            | SUGGESTED_USER_FEE    | 50                                                 |
            | SUGGESTED_PA_FEE      | 0                                                  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_ACTIVATE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_SERVICE
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                   |
            | ID                 | NotNone                 |
            | DESCRIPTION        | NotNone                 |
            | COMPANY_NAME       | companyName             |
            | OFFICE_NAME        | None                    |
            | DEBTOR_ID          | NotNone                 |
            | INSERTED_TIMESTAMP | NotNone                 |
            | UPDATED_TIMESTAMP  | NotNone                 |
            | INSERTED_BY        | activatePaymentNoticeV2 |
            | UPDATED_BY         | activatePaymentNoticeV2 |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_SERVICE retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_PLAN
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                           |
            | ID                    | NotNone                         |
            | CREDITOR_REFERENCE_ID | 10$iuv                          |
            | DUE_DATE              | NotNone                         |
            | RETENTION_DATE        | None                            |
            | AMOUNT                | $activatePaymentNoticeV2.amount |
            | FLAG_FINAL_PAYMENT    | N                               |
            | INSERTED_TIMESTAMP    | NotNone                         |
            | UPDATED_TIMESTAMP     | NotNone                         |
            | METADATA              | None                            |
            | FK_POSITION_SERVICE   | NotNone                         |
            | INSERTED_BY           | activatePaymentNoticeV2         |
            | UPDATED_BY            | activatePaymentNoticeV2         |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_PLAN retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                     | value                                         |
            | ID                         | NotNone                                       |
            | CREDITOR_REFERENCE_ID      | 10$iuv                                        |
            | PAYMENT_TOKEN              | $activatePaymentNoticeV2Response.paymentToken |
            | BROKER_PA_ID               | #intermediarioPA#                             |
            | STATION_ID                 | #stazione_versione_primitive_2#               |
            | STATION_VERSION            | 2                                             |
            | PSP_ID                     | #pspPoste#                                    |
            | BROKER_PSP_ID              | #brokerPspPoste#                              |
            | CHANNEL_ID                 | #channelPoste#                                |
            | AMOUNT                     | $activatePaymentNoticeV2.amount               |
            | FEE                        | None                                          |
            | OUTCOME                    | OK                                            |
            | PAYMENT_METHOD             | None                                          |
            | PAYMENT_CHANNEL            | NA                                            |
            | TRANSFER_DATE              | None                                          |
            | PAYER_ID                   | None                                          |
            | INSERTED_TIMESTAMP         | NotNone                                       |
            | UPDATED_TIMESTAMP          | NotNone                                       |
            | FK_PAYMENT_PLAN            | NotNone                                       |
            | RPT_ID                     | None                                          |
            | PAYMENT_TYPE               | MOD3                                          |
            | CARRELLO_ID                | None                                          |
            | ORIGINAL_PAYMENT_TOKEN     | None                                          |
            | FLAG_IO                    | N                                             |
            | RICEVUTA_PM                | None                                          |
            | FLAG_PAYPAL                | None                                          |
            | FLAG_ACTIVATE_RESP_MISSING | None                                          |
            | TRANSACTION_ID             | None                                          |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_TRANSFER
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                   | value                                                       |
            | ID                       | NotNone                                                     |
            | CREDITOR_REFERENCE_ID    | 10$iuv                                                      |
            | PA_FISCAL_CODE_SECONDARY | 66666666666,66666666666,66666666666,88888888888,90000000001 |
            | IBAN                     | IT45R0760103200000000001016                                 |
            | AMOUNT                   | 2000                                                        |
            | REMITTANCE_INFORMATION   | NotNone                                                     |
            | TRANSFER_CATEGORY        | NotNone                                                     |
            | TRANSFER_IDENTIFIER      | 1,2,3,4,5                                                   |
            | VALID                    | Y                                                           |
            | FK_POSITION_PAYMENT      | NotNone                                                     |
            | INSERTED_TIMESTAMP       | NotNone                                                     |
            | UPDATED_TIMESTAMP        | NotNone                                                     |
            | FK_PAYMENT_PLAN          | NotNone                                                     |
            | INSERTED_BY              | activatePaymentNoticeV2                                     |
            | UPDATED_BY               | activatePaymentNoticeV2                                     |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_TRANSFER retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        # POSITION_PAYMENT_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                                                                                  |
            | ID                    | NotNone                                                                                                |
            | PA_FISCAL_CODE        | $activatePaymentNoticeV2.fiscalCode                                                                    |
            | NOTICE_ID             | $activatePaymentNoticeV2.noticeNumber                                                                  |
            | STATUS                | PAYING,CANCELLED,PAID,NOTICE_GENERATED,NOTICE_SENT,NOTIFIED                                            |
            | INSERTED_TIMESTAMP    | NotNone                                                                                                |
            | CREDITOR_REFERENCE_ID | $paGetPaymentV2.creditorReferenceId                                                                    |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken                                                          |
            | INSERTED_BY           | activatePaymentNoticeV2,mod3CancelV2,sendPaymentOutcome,sendPaymentOutcome,sendPaymentOutcome,paSendRT |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 6 record for the table POSITION_PAYMENT_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
        # POSITION_PAYMENT_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column                | value                                         |
            | ID                    | NotNone                                       |
            | FK_POSITION_PAYMENT   | NotNone                                       |
            | CREDITOR_REFERENCE_ID | 10$iuv                                        |
            | PAYMENT_TOKEN         | $activatePaymentNoticeV2Response.paymentToken |
            | STATUS                | NOTIFIED                                      |
            | INSERTED_TIMESTAMP    | NotNone                                       |
            | UPDATED_TIMESTAMP     | NotNone                                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_PAYMENT_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # POSITION_STATUS
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column             | value                         |
            | ID                 | NotNone                       |
            | STATUS             | PAYING,INSERTED,PAID,NOTIFIED |
            | INSERTED_TIMESTAMP | NotNone                       |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP ASC                |
        And verify 4 record for the table POSITION_STATUS retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | INSERTED_TIMESTAMP ASC                |
        # POSITION_STATUS_SNAPSHOT
        And generate list columns list_columns and dict fields values expected dict_fields_values_expected for query checks all values with datatable horizontal
            | column              | value    |
            | ID                  | NotNone  |
            | STATUS              | NOTIFIED |
            | INSERTED_TIMESTAMP  | NotNone  |
            | UPDATED_TIMESTAMP   | NotNone  |
            | FK_POSITION_SERVICE | NotNone  |
        And checks all values by $dict_fields_values_expected of the record for each columns $list_columns of the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys     | where_values                          |
            | NOTICE_ID      | $activatePaymentNoticeV2.noticeNumber |
            | PA_FISCAL_CODE | $activatePaymentNoticeV2.fiscalCode   |
            | ORDER BY       | INSERTED_TIMESTAMP,ID ASC             |
        And verify 1 record for the table POSITION_STATUS_SNAPSHOT retrived by the query on db nodo_online with where datatable horizontal
            | where_keys | where_values                          |
            | NOTICE_ID  | $activatePaymentNoticeV2.noticeNumber |
            | ORDER BY   | ID ASC                                |
        # RE #####
        # activatePaymentNoticeV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Req
        And from $activatePaymentNoticeV2Req.idPSP xml check value #pspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $activatePaymentNoticeV2Req.idChannel xml check value #channelPoste# in position 0
        And from $activatePaymentNoticeV2Req.password xml check value #password# in position 0
        And from $activatePaymentNoticeV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $activatePaymentNoticeV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # activatePaymentNoticeV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | activatePaymentNoticeV2                       |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key activatePaymentNoticeV2Resp
        And from $activatePaymentNoticeV2Resp.outcome xml check value OK in position 0
        And from $activatePaymentNoticeV2Resp.totalAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $activatePaymentNoticeV2Resp.paymentDescription xml check value pagamentoTest in position 0
        And from $activatePaymentNoticeV2Resp.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $activatePaymentNoticeV2Resp.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        ### TRANSFER 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        ### TRANSFER 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        ### TRANSFER 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        ### TRANSFER 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        ### TRANSFER 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 5
        And from $activatePaymentNoticeV2Resp.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $activatePaymentNoticeV2Resp.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4

        And from $activatePaymentNoticeV2Resp.creditorReferenceId xml check value 10$iuv in position 0
        # paGetPaymentV2 REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Req
        And from $paGetPaymentV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paGetPaymentV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paGetPaymentV2Req.qrCode.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Req.qrCode.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paGetPaymentV2Req.amount xml check value $activatePaymentNoticeV2.amount in position 0
        # paGetPaymentV2 RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | paGetPaymentV2                                |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paGetPaymentV2Resp
        And from $paGetPaymentV2Resp.outcome xml check value OK in position 0
        And from $paGetPaymentV2Resp.data.creditorReferenceId xml check value 10$iuv in position 0
        And from $paGetPaymentV2Resp.data.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paGetPaymentV2Resp.data.dueDate xml check value 2021-12-31 in position 0
        And from $paGetPaymentV2Resp.data.description xml check value pagamentoTest in position 0
        ###TRANSFER 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ###TRANSFER 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ###TRANSFER 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ###TRANSFER 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ###TRANSFER 5
        And from $paGetPaymentV2Resp.data.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paGetPaymentV2Resp.data.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        # fees REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesReq
        And from $feesReq.paymentAmount json check value $activatePaymentNoticeV2.amount in position 0
        And from $feesReq.primaryCreditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.idPspList.idBrokerPsp json check value #brokerPspPoste# in position 0
        And from $feesReq.idPspList.idChannel json check value #channelPoste# in position 0
        And from $feesReq.idPspList.idPsp json check value #pspPoste# in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 0
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 0
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 1
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 1
        And from $feesReq.transferList.creditorInstitution json check value #creditor_institution_code# in position 2
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 2
        And from $feesReq.transferList.creditorInstitution json check value 88888888888 in position 3
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 3
        And from $feesReq.transferList.creditorInstitution json check value 90000000001 in position 4
        And from $feesReq.transferList.transferCategory json check value paGetPaymentTest in position 4
        # fees RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | fees                                          |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve json PAYLOAD at position 0 and save it under the key feesResp
        And from $feesResp.belowThreshold json check value False in position 0
        And from $feesResp.bundleOptions.abi json check value NotNone in position 0
        And from $feesResp.bundleOptions.bundleDescription json check value Pacchetto utile all'esecuzione degli integration test del Nodo. in position 0
        And from $feesResp.bundleOptions.bundleName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.idBrokerPsp json check value #brokerPspPoste# in position 0
        And from $feesResp.bundleOptions.idBundle json check value NotNone in position 0
        And from $feesResp.bundleOptions.idChannel json check value #channelPoste# in position 0
        And from $feesResp.bundleOptions.idPsp json check value #pspPoste# in position 0
        And from $feesResp.bundleOptions.pspBusinessName json check value Test NDP in position 0
        And from $feesResp.bundleOptions.taxPayerFee json check value 50 in position 0
        # sendPaymentOutcome REQ
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | REQ                                           |
            | ESITO              | RICEVUTA                                      |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeReq
        And from $sendPaymentOutcomeReq.idPSP xml check value #pspPoste# in position 0
        And from $sendPaymentOutcomeReq.idBrokerPSP xml check value #brokerPspPoste# in position 0
        And from $sendPaymentOutcomeReq.idChannel xml check value #channelPoste# in position 0
        And from $sendPaymentOutcomeReq.password xml check value #password# in position 0
        And from $sendPaymentOutcomeReq.paymentTokens.paymentToken xml check value $activatePaymentNoticeV2Response.paymentToken in position 0
        And from $sendPaymentOutcomeReq.outcome xml check value OK in position 0
        # sendPaymentOutcome RESP
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys         | where_values                                  |
            | PAYMENT_TOKEN      | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO        | sendPaymentOutcome                            |
            | SOTTO_TIPO_EVENTO  | RESP                                          |
            | ESITO              | INVIATA                                       |
            | INSERTED_TIMESTAMP | TRUNC(SYSDATE-1)                              |
            | ORDER BY           | DATA_ORA_EVENTO ASC                           |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key sendPaymentOutcomeResp
        And from $sendPaymentOutcomeResp.outcome xml check value KO in position 0
        And from $sendPaymentOutcomeResp.fault.faultCode xml check value PPT_TOKEN_SCADUTO in position 0
        And from $sendPaymentOutcomeResp.fault.faultString xml check value paymentToken is expired in position 0
        And from $sendPaymentOutcomeResp.fault.id xml check value NodoDeiPagamentiSPC in position 0
        And from $sendPaymentOutcomeResp.fault.description xml check value paymentToken is expired in position 0
        # paSendRTV2 REQ principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | #stazione_versione_primitive_2#               |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Req
        And from $paSendRTV2Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2Req.idStation xml check value #stazione_versione_primitive_2# in position 0
        And from $paSendRTV2Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | #stazione_versione_primitive_2#               |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2Resp
        And from $paSendRTV2Resp.outcome xml check value OK in position 0
        # paSendRTV2 REQ broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Req
        And from $paSendRTV2BC1Req.idPA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.idBrokerPA xml check value #intermediarioPA# in position 0
        And from $paSendRTV2BC1Req.idStation xml check value 66666666666_09 in position 0
        And from $paSendRTV2BC1Req.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2BC1Req.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2BC1Req.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2BC1Req.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2BC1Req.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2BC1Req.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2BC1Req.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4
        And from $paSendRTV2BC1Req.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP broadcast 1 principale
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 66666666666_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2BC1Resp
        And from $paSendRTV2BC1Resp.outcome xml check value OK in position 0
        # paSendRT REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecReq
        And from $paSendRTSecReq.idPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idBrokerPA xml check value 88888888888 in position 0
        And from $paSendRTSecReq.idStation xml check value 88888888888_01 in position 0
        And from $paSendRTSecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTSecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTSecReq.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTSecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTSecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTSecReq.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTSecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTSecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTSecReq.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRT RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRT                                      |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 88888888888_01                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTSecResp
        And from $paSendRTSecResp.outcome xml check value OK in position 0
        # paSendRTV2 REQ sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | REQ                                           |
            | ESITO                    | INVIATA                                       |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecReq
        And from $paSendRTV2SecReq.idPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idBrokerPA xml check value 90000000001 in position 0
        And from $paSendRTV2SecReq.idStation xml check value 90000000001_09 in position 0
        And from $paSendRTV2SecReq.receipt.noticeNumber xml check value $activatePaymentNoticeV2.noticeNumber in position 0
        And from $paSendRTV2SecReq.receipt.fiscalCode xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.outcome xml check value OK in position 0
        And from $paSendRTV2SecReq.receipt.creditorReferenceId xml check value 10$iuv in position 0
        And from $paSendRTV2SecReq.receipt.paymentAmount xml check value $activatePaymentNoticeV2.amount in position 0
        And from $paSendRTV2SecReq.receipt.description xml check value pagamentoTest in position 0
        And from $paSendRTV2SecReq.receipt.companyName xml check value companyName in position 0
        ### TRANSFER 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 1 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 0
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 0
        ### TRANSFER 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 2 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 1
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 1
        ### TRANSFER 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 3 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value $activatePaymentNoticeV2.fiscalCode in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 2
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 2
        ### TRANSFER 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 4 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 88888888888 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 3
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 3
        ### TRANSFER 5
        And from $paSendRTV2SecReq.receipt.transferList.transfer.idTransfer xml check value 5 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferAmount xml check value 2000 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.fiscalCodePA xml check value 90000000001 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.IBAN xml check value IT45R0760103200000000001016 in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.remittanceInformation xml check value testPaGetPayment in position 4
        And from $paSendRTV2SecReq.receipt.transferList.transfer.transferCategory xml check value paGetPaymentTest in position 4

        And from $paSendRTV2SecReq.receipt.idChannel xml check value #channelPoste# in position 0
        # paSendRTV2 RESP sec
        And execution query to get value result_query on the table RE, with the columns PAYLOAD with db name re with where datatable horizontal
            | where_keys               | where_values                                  |
            | PAYMENT_TOKEN            | $activatePaymentNoticeV2Response.paymentToken |
            | TIPO_EVENTO              | paSendRTV2                                    |
            | SOTTO_TIPO_EVENTO        | RESP                                          |
            | ESITO                    | RICEVUTA                                      |
            | IDENTIFICATIVO_EROGATORE | 90000000001_09                                |
            | INSERTED_TIMESTAMP       | TRUNC(SYSDATE-1)                              |
            | ORDER BY                 | INSERTED_TIMESTAMP ASC                        |
        And through the query result_query retrieve xml PAYLOAD at position 0 and save it under the key paSendRTV2SecResp
        And from $paSendRTV2SecResp.outcome xml check value OK in position 0