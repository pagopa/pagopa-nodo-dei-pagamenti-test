Feature:  flow checks for closePayment-v1 request - closePayment-v1 OK, pspNotifyPayment in timeout and mod3CancelV1 [FLUSSO_CP_07]
 
  Background:
    Given systems up 
    And EC new version
        
   # UPDATE NODO4_CFG.CONFIGURATION_KEYS s SET s.CONFIG_VALUE = 1000 WHERE s.CONFIG_KEY ='default_durata_estensione_token_IO'
   
   # CONFIG server refresh phase
     Scenario: Execute CONFIG server refresh
    When CONFIG server refresh is triggered  # https://api.dev.platform.pagopa.it/nodo-pagamenti-dev/api/v1/config/refresh/CONFIG
    Then verify the HTTP status code response is 200 
   
   # verifyPaymentNotice phase
    Scenario: Execute verifyPaymentNotice request
    Given initial XML verifyPaymentNotice soap-request
    
    """
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:nod="http://pagopa-api.pagopa.gov.it/node/nodeForPsp.xsd">
       <soapenv:Header/>
       <soapenv:Body>
          <nod:verifyPaymentNoticeReq>
             <idPSP>AGID_01</idPSP>
             <idBrokerPSP>97735020584</idBrokerPSP>
             <idChannel>97735020584_03</idChannel>
             <password>pwdpwdpwd</password>
             <qrCode>
                <fiscalCode>#creditor_institution_code#</fiscalCode>
                <noticeNumber>#notice_number#</noticeNumber>
             </qrCode>
          </nod:verifyPaymentNoticeReq>
       </soapenv:Body>
    </soapenv:Envelope>
    """
    
    When psp sends SOAP verifyPaymentNotice to nodo-dei-pagamenti
    Then check outcome is OK of verifyPaymentNotice response
    
   # activateIOPaymentReq phase
    Scenario: Execute activateIOPayment request
    Given initial XML activateIOPayment soap-request
	
    """
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:nod="http://pagopa-api.pagopa.gov.it/node/nodeForIO.xsd">
       <soapenv:Header/>
       <soapenv:Body>
          <nod:activateIOPaymentReq>
             <idPSP>AGID_01</idPSP>
             <idBrokerPSP>97735020584</idBrokerPSP>
             <idChannel>97735020584_03</idChannel>
             <password>pwdpwdpwd</password>
             <!--Optional:-->
             <idempotencyKey>#idempotency_key#</idempotencyKey>
             <qrCode>
                <fiscalCode>#creditor_institution_code#</fiscalCode>
                <noticeNumber>#notice_number#</noticeNumber>
             </qrCode>
             <!--Optional:-->
             <expirationTime>60000</expirationTime>
             <amount>10.00</amount>
             <!--Optional:-->
             <dueDate>2021-12-12</dueDate>
             <!--Optional:-->
             <paymentNote>responseFull</paymentNote>
             <!--Optional:-->
             <payer>
                <uniqueIdentifier>
                   <entityUniqueIdentifierType>G</entityUniqueIdentifierType>
                   <entityUniqueIdentifierValue>77777777777</entityUniqueIdentifierValue>
                </uniqueIdentifier>
                <fullName>IOname_#idempotency_key#</fullName>
                <!--Optional:-->
                <streetName>IOstreet</streetName>
                <!--Optional:-->
                <civicNumber>IOcivic</civicNumber>
                <!--Optional:-->
                <postalCode>IOcode</postalCode>
                <!--Optional:-->
                <city>IOcity</city>
                <!--Optional:-->
                <stateProvinceRegion>IOstate</stateProvinceRegion>
                <!--Optional:-->
                <country>IT</country>
                <!--Optional:-->
                <e-mail>IO.test.prova@gmail.com</e-mail>
             </payer>
          </nod:activateIOPaymentReq>
       </soapenv:Body>
    </soapenv:Envelope>
    """
        
    When psp sends SOAP activateIOPayment to nodo-dei-pagamenti
    Then check outcome is OK of activateIOPayment response
    
    # DB check_00
    # SELECT * FROM NODO_ONLINE.POSITION_ACTIVATE s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    # check POSITION_ACTIVATE.PAYMENT_TOKEN == $activateIOPaymentResponse.paymentToken and
    #       POSITION_ACTIVATE.PSP_ID == $activateIOPaymentRequest.idPSP
          
    # nodoChiediInformazioniPagamento phase
    Scenario: Execute a nodoChiediInformazioniPagamento request
    Given initial json nodoChiediInformazioniPagamento
    """
        {"idPagamento": "$activateIOPaymentResponse.paymentToken"}
    """
    When PM sends nodoChiediInformazioniPagamento to nodo-dei-pagamenti
    Then check errorCode is 200
    
    # closePayment-v1 request phase  
    Scenario: Execute a closePayment-v1 request
    Given initial json closePayment-v1
    """
        {"paymentTokens": [
            "$activateIOPaymentResponse.paymentToken"
            ],
        "outcome": "OK",
        "identificativoPsp": "70000000001",
        "tipoVersamento": "BPAY",
        "identificativoIntermediario": "70000000001",
        "identificativoCanale": "70000000001_03",
        "pspTransactionId": "18460845",
        "totalAmount": 12.00,
        "fee": 2.00,
        "timestampOperation": "2033-04-23T18:25:43Z",
        "additionalPaymentInformations": {
              "transactionId": "16113941",
              "outcomePaymentGateway": "EFF",
              "authorizationCode": "resOK"
            }
        }  
    """  
    When PM sends closePayment-v1 to nodo-dei-pagamenti
    And psp sends pspNotifyPaymentResponse in late
    Then check esito of closePayment-v1 is OK 
    And check errorCode is 200
 
    # DB check_01
    # SELECT s.* FROM NODO_ONLINE.POSITION_PAYMENT_STATUS s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#' order by s.ID asc;
    # SELECT s.* FROM NODO_ONLINE.POSITION_PAYMENT_STATUS_SNAPSHOT s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    # SELECT s.* FROM NODO_ONLINE.POSITION_STATUS s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    # SELECT s.* FROM NODO_ONLINE.POSITION_STATUS_SNAPSHOT s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    # SELECT s.* FROM NODO_ONLINE.POSITION_PAYMENT s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    # SELECT s.* FROM NODO_ONLINE.POSITION_SERVICE s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    # SELECT s.* FROM NODO_ONLINE.PM_SESSION_DATA s where s.ID_SESSIONE = '$activateIOPaymentResponse.paymentToken';
    # SELECT s.* FROM NODO_ONLINE.POSITION_SUBJECT s where s.FULL_NAME = 'IOname_#idempotency_key#';
    # SELECT s.* FROM NODO_ONLINE.POSITION_ACTIVATE s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
        
    # check
    
    #POSITION_PAYMENT_STATUS
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # STATUS == 'PAYING'
    # INSERTED_TIMESTAMP != null
    # CREDITOR_REFERENCE_ID == iuv
    # PAYMENT_TOKEN == $activateIOPaymentResponse.paymentToken

    # STATUS1 == 'PAYMENT_RESERVED'
    # STATUS2 == 'PAYMENT_SENT'
    # STATUS3 == 'PAYMENT_UNKNOWN'
    # STATUS4 == null
    
    #POSITION_PAYMENT_STATUS_SNAPSHOT
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # CREDITOR_REFERENCE_ID == iuv
    # PAYMENT_TOKEN == $activateIOPaymentResponse.paymentToken
    # STATUS == 'PAYMENT_UNKNOWN'
    # INSERTED_TIMESTAMP != null
    # UPDATED_TIMESTAMP != null
    # FK_POSITION_PAYMENT == POSITION_PAYMENT.id

    # ID1 == null
    
    #POSITION_STATUS
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # STATUS2 == 'PAYING'
    # INSERTED_TIMESTAMP != null

    # ID1 == null
    
    #POSITION_STATUS_SNAPSHOT
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # STATUS == 'PAYING'
    # INSERTED_TIMESTAMP != null
    # UPDATED_TIMESTAPM != null
    # FK_POSITION_SERVICE == POSITION_SERVICE.id

    # id1 == null
    
    #POSITION_PAYMENT
    # ID5 != null
    # PA_FISCAL_CODE5 == '#creditor_institution_code#'
    # NOTICE_ID5 == '#notice_number#'
    # CREDITOR_REFERENCE_ID5 == iuv
    # PAYMENT_TOKEN5 == $activateIOPaymentResponse.paymentToken
    # BROKER_PA_ID5 == '#creditor_institution_code#'
    # STATION_ID5 == '#stazione#'
    # STATION_VERSION5 == 2
    # PSP_ID5 == $closePayment-v1Request.identificativoPsp
    # BROKER_PSP_ID5 == $closePayment-v1Request.identificativoIntermediario
    # CHANNEL_ID5 == $closePayment-v1Request.identificativoCanale
    # IDEMPOTENCY_KEY5 == '#idempotency_key#'
    # AMOUNT5 == 10
    # FEE5 == null
    # OUTCOME5 == null
    # PAYMENT_METHOD5 == 'BPAY'
    # PAYMENT_CHANNEL5 == 'WISP'
    # TRANSFER_DATE5 == null
    # PAYER_ID5 == POSITION_SUBJECT.ID
    # APPLICATION_DATE5 == null
    # INSERTED_TIMESTAMP5 != null
    # UPDATED_TIMESTAMP5 != null
    # FK_PAYMENT_PLAN5 != null
    # RPT_ID5 == null
    # PAYMENT_TYPE5 == 'MOD3'
    # CARRELLO_ID5 == null
    # ORIGINAL_PAYMENT_TOKEN5 == null
    # FLAG_IO5 == 'Y'
    # RICEVUTA_PM5 == 'Y'
    # FLAG_PAYPAL == 'N'
    # TRANSACTION_ID_pp == $closePayment-v1.transactionId
     
    #PM_METADATA
    # ID != null
    # TRANSACTION_ID == $closePayment-v1.transactionId
    # KEY == 'Token'
    # VALUE == $activateIOPaymentResponse.paymentToken
    # INSERTED_TIMESTAMP != null
    # UPDATED_TIMESTAMP != null
    # INSERTED_BY == 'closePayment-v1'
    # UPDATED_BY == 'closePayment-v1'

    # ID2 != null
    # TRANSACTION_ID2 == $closePayment-v1.transactionId
    # KEY2 == 'Tipo versamento'
    # VALUE2 == 'BPAY'
    # INSERTED_TIMESTAMP2 != null
    # UPDATED_TIMESTAMP2 != null
    # INSERTED_BY2 == 'closePayment-v1'
    # UPDATED_BY2 == 'closePayment-v1'

    # ID3 != null
    # TRANSACTION_ID3 == $closePayment-v1.transactionId
    # KEY3 == 'key'
    # VALUE3 == $closePayment-v1.additionalPaymentInformations
    # INSERTED_TIMESTAMP3 != null
    # UPDATED_TIMESTAMP3 != null
    # INSERTED_BY3 == 'closePayment-v1'
    # UPDATED_BY3 == 'closePayment-v1'
     
    # POSITION_ACTIVATE
    # payTok == $activateIOPaymentResponse.paymentToken
    # psp12 == $closePayment-v1.identificativoPsp
     
     
     # mod3CancelV1 phase
     Scenario: Execute mod3CancelV1 poller
    Given the Execute closePayment-v1 request scenario executed successfully
    When job mod3CancelV1 triggered after 10 seconds
    Then verify the HTTP status code of mod3CancelV1 response is 200

    # UPDATE NODO4_CFG.CONFIGURATION_KEYS s SET s.CONFIG_VALUE = 3600000 WHERE s.CONFIG_KEY ='default_durata_estensione_token_IO'
   
   # CONFIG server refresh phase
     Scenario: Execute CONFIG server refresh
    When CONFIG server refresh is triggered  # https://api.dev.platform.pagopa.it/nodo-pagamenti-dev/api/v1/config/refresh/CONFIG
    Then verify the HTTP status code response is 200 
     
    
    #DB check_02
    #SELECT s.* FROM NODO_ONLINE.POSITION_PAYMENT_STATUS s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#' order by s.ID asc;
    #SELECT s.* FROM NODO_ONLINE.POSITION_PAYMENT_STATUS_SNAPSHOT s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    #SELECT s.* FROM NODO_ONLINE.POSITION_STATUS s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#' order by s.ID asc;
    #SELECT s.* FROM NODO_ONLINE.POSITION_STATUS_SNAPSHOT s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    #SELECT s.* FROM NODO_ONLINE.POSITION_PAYMENT s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    #SELECT s.* FROM NODO_ONLINE.POSITION_SERVICE s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    #SELECT s.* FROM NODO_ONLINE.POSITION_SUBJECT s where s.FULL_NAME = 'IOname_#idempotency_key#';
    #SELECT s.* FROM NODO_ONLINE.POSITION_SUBJECT s where s.FULL_NAME = 'SPOname_$activateIOPaymentResponse.paymentToken';
    #SELECT s.* FROM NODO_ONLINE.POSITION_RECEIPT s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    #SELECT s.* FROM NODO_ONLINE.PSP s where s.ID_PSP = '$sendPaymentOutcomeReq.idPSP';
    #SELECT * FROM NODO_ONLINE.POSITION_ACTIVATE s where s.NOTICE_ID = '#notice_number#' and s.PA_FISCAL_CODE= '#creditor_institution_code#';
    
    #check
    
    #POSITION_PAYMENT_STATUS
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # STATUS == 'PAYING'
    # INSERTED_TIMESTAMP != null
    # CREDITOR_REFERENCE_ID == iuv
    # PAYMENT_TOKEN == $activateIOPaymentResponse.paymentToken

    # STATUS1 == 'PAYMENT_RESERVED'
    # STATUS2 == 'PAYMENT_SENT'
    # STATUS3 == 'PAYMENT_UNKNOWN'
    # STATUS4 == 'CANCELLED'
    
    #POSITION_PAYMENT_STATUS_SNAPSHOT
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # CREDITOR_REFERENCE_ID == iuv
    # PAYMENT_TOKEN == $activateIOPaymentResponse.paymentToken
    # STATUS == 'CANCELLED'
    # INSERTED_TIMESTAMP != null
    # UPDATED_TIMESTAMP != null
    # FK_POSITION_PAYMENT == POSITION_PAYMENT.id

    # ID1 == null
    
    #POSITION_STATUS
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # STATUS == 'PAYING'
    # INSERTED_TIMESTAMP != null

    # STATUS1 == 'INSERTED'
    
    #POSITION_STATUS_SNAPSHOT
    # ID != null
    # PA_FISCAL_CODE == '#creditor_institution_code#'
    # NOTICE_ID == '#notice_number#'
    # STATUS == 'INSERTED'
    # INSERTED_TIMESTAMP != null
    # UPDATED_TIMESTAPM != null
    # FK_POSITION_SERVICE == POSITION_SERVICE.id

    # id1 == null
    
    #POSITION_PAYMENT
    # ID5 != null
    # PA_FISCAL_CODE5 == '#creditor_institution_code#'
    # NOTICE_ID5 == '#notice_number#'
    # CREDITOR_REFERENCE_ID5 == iuv
    # PAYMENT_TOKEN5 == $activateIOPaymentResponse.paymentToken
    # BROKER_PA_ID5 == '#creditor_institution_code#'
    # STATION_ID5 == '#stazione#'
    # STATION_VERSION5 == 1
    # PSP_ID5 == $closePayment-v1Request.idPSP
    # BROKER_PSP_ID5 == $closePayment-v1Request.idBrokerPSP
    # CHANNEL_ID5 == $closePayment-v1Request.idChannel
    # IDEMPOTENCY_KEY5 == '#idempotency_key#'
    # AMOUNT5 == 10
    # FEE5 == null
    # OUTCOME5 == null
    # PAYMENT_METHOD5 == 'BPAY'
    # PAYMENT_CHANNEL5 == 'WISP'
    # TRANSFER_DATE5 == null
    # PAYER_ID5 == POSITION_SUBJECT.ID
    # APPLICATION_DATE5 == null
    # INSERTED_TIMESTAMP5 != null
    # UPDATED_TIMESTAMP5 != null
    # FK_PAYMENT_PLAN5 != null
    # RPT_ID5 == null
    # PAYMENT_TYPE5 == 'MOD3'
    # CARRELLO_ID5 == null
    # ORIGINAL_PAYMENT_TOKEN5 == null
    # FLAG_IO5 == 'Y'
    # RICEVUTA_PM5 == 'Y'
    # FLAG_PAYPAL == 'N'
     
     #POSITION_RECEIPT
    # receiptID == null
     
    #POSITION_ACTIVATE
    # payTok == $activateIOPaymentResponse.paymentToken
    # psp12 == $closePayment-v1Request.identificativoPsp